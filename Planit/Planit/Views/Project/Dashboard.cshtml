@model IEnumerable<Planit.Core.Project>

@{
    ViewBag.Title = "Dashboard";
}

<h2>Dashboard</h2>

<div>
    <div class="container">
        <div class="navbar-header navbar-fixed-top">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <!--Disabled
            @Html.ActionLink("Tree", "Outline", "Task", null, new { @class = "navbar-brand" })
                -->
        </div>

        <!--Not sure how to make the inner nav bar like the outer nav bar that goes across the outer nav bar length-->
        <div>
            <!--pagination makes the -->
            <ul class="navbar nav pagination ">
                <li>@Html.ActionLink("Tree", "Tree", "Project")</li>
                <li>@Html.ActionLink("Outline", "Outline", "Project")</li>
                <li>@Html.ActionLink("Task", "Task", "Project")</li>
                <!--Added these links to the nav bar-->
                <li>@Html.ActionLink("Schedule", "Schedule", "Project")</li>
                <li class ="active">@Html.ActionLink("Dashboard", "Dashboard", "Project")</li>
                <li>@Html.ActionLink("Analytics", "Contact", "Home")</li>
                <li>@Html.ActionLink("Notifications", "Contact", "Home")</li>

            </ul>

        </div>
    </div>
</div>


<div class="row">

    <div class=" well col-md-3">

        <div>
            <!--*************1/3 Task view goes here******************-->
            <!--Task Outline Toggle is redundent with the Navbar-->
            <h2>Outline</h2>

            <div style=" overflow-x: hidden; overflow-y: auto; height: 532px;">
                <table class="table table-condensed">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.DueDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Description)
                        </th>

                        <th></th>
                    </tr>

                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.DueDate)
                            </td>
                            <td>

                                @for (int i = 0; i < item.Depth * 3; i++) // item.Depth * 3 is to make the difference between parent child more drastic
                                {
                                    <p style="display:inline;"></p>
                                }

                                @Html.DisplayFor(modelItem => item.Description)

                            </td>



                        </tr>
                    }

                </table>
            </div>

        </div>
    </div>




    <div class="col-md-9">
        <div class="well">

            <p>
                Tree Node View Goes Here
                @Html.ActionLink("Create New", "Create")
            </p>

            <div style=" overflow-x: hidden; overflow-y: auto; height: 532px;">


                <div class="row">

                    <!-- start: Page section -->
                    <section id="page-sidebar" class="span12">


                        <!--Testing the Dashboard here for now-->
                        <div class="row-fluid">
                       
                            <div class="col-md-4">

                                @foreach (var item in Model)
{
    <div id="myStat" data-dimension="200" data-text="@Html.DisplayFor(modelItem => item.Status)%" data-info="@Html.DisplayFor(modelItem => item.Description)" data-width="30"
         data-fontsize="15" data-percent="35" data-fgcolor="#7ea568" data-bgcolor="#eee" data-fill="#ddd" class="circliful" style="width: 200px;">
    </div>
                                                                    <div></div>


}


                                </div>
                           


                        </div>

                    </section>
                    <!-- end: Page section -->
            </div>
                </div>
</div>




                <script>

                    $(document).ready(function () {
                        $('#myStat').circliful();
                    });

                    $(document).ready(function () {
                        $('#myStat2').circliful();
                    });

                    $(document).ready(function () {
                        $('#myStat3').circliful();
                    });

                    $(document).ready(function () {
                        $('#myStat4').circliful();
                    });

                    $(document).ready(function () {
                        $('#myStat5').circliful();
                    });

                    $(document).ready(function () {
                        $('#myStat6').circliful();
                    });

                </script>


            </div>











        </div>
