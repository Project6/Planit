@model Planit.Core.Project

@{
    ViewBag.Title = "Edit";
}
<div>
    <div class="container">
        <div class="navbar-header navbar-fixed-top">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <!--Disabled
            @Html.ActionLink("Tree", "Outline", "Task", null, new { @class = "navbar-brand" })
                -->
        </div>
        <!--Not sure how to make the inner nav bar like the outer nav bar that goes across the outer nav bar length-->
        <div>
            <!--pagination makes the -->
            <ul class="navbar nav pagination ">
                <li>@Html.ActionLink("Dashboard", "Dashboard", "Project")</li>
                <li>@Html.ActionLink("Tree", "Tree", "Project")</li>
                <li>@Html.ActionLink("Outline", "Outline", "Project")</li>
                <li>@Html.ActionLink("Task", "Task", "Project")</li>
                <!--Added these links to the nav bar-->
                <li>@Html.ActionLink("Schedule", "Schedule", "Project")</li>

                <li>@Html.ActionLink("Analytics", "Analytics", "Project")</li>
                <li>@Html.ActionLink("Notifications", "Notifications", "Project")</li>
            </ul>
        </div>
    </div>
</div>
<h2 style="color: #ffffff">Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 style="color: #ffffff">Project</h4>
        <hr />
        @Html.ValidationSummary(true)

        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.ParentID)
        @Html.HiddenFor(model => model.ParentTitle)
        @Html.HiddenFor(model => model.Depth)
        @Html.HiddenFor(model => model.ChildrenStr)

        <div class="form-group" style="color: #ffffff">
            @Html.LabelFor(model => model.ParentTitle, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ParentTitle)
            </div>
        </div>

        <div class="form-group" style="color: #ffffff">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="form-group" style="color: #ffffff">
            @Html.LabelFor(model => model.StartDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate)
                @Html.ValidationMessageFor(model => model.StartDate)
            </div>
        </div>

        <div class="form-group" style="color: #ffffff">
            @Html.LabelFor(model => model.DueDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DueDate)
                @Html.ValidationMessageFor(model => model.DueDate)
            </div>
        </div>

        <div class="form-group" style="color: #ffffff">
            @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status)
                @Html.ValidationMessageFor(model => model.Status)
            </div>
        </div>
        <div class="form-group" style="color: #ffffff">
            @Html.LabelFor(model => model.Note, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note)
                @Html.ValidationMessageFor(model => model.Note)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
        <input type="hidden" name="returnUrl" value="@ViewBag.returnUrl" />
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}


