@model IEnumerable<Planit.Core.Project>
@{
    ViewBag.Title = "Task";
}
<!--
<h2>Task</h2>
    -->

<div>
    <div class="container">
        <div class="navbar-header navbar-fixed-top">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <!--Disabled
            @Html.ActionLink("Tree", "Outline", "Task", null, new { @class = "navbar-brand" })
                -->
        </div>

        <!--Not sure how to make the inner nav bar like the outer nav bar that goes across the outer nav bar length-->
        <div>
            <!--pagination makes the -->
            <ul class="navbar nav pagination ">
                <li>@Html.ActionLink("Dashboard", "Dashboard", "Project")</li>
                <li>@Html.ActionLink("Tree", "Tree", "Project")</li>
                <li>@Html.ActionLink("Outline", "Outline", "Project")</li>
                <li class="active">@Html.ActionLink("Task", "Task", "Project")</li>
                <!--Added these links to the nav bar-->
                <li>@Html.ActionLink("Schedule", "Schedule", "Project")</li>
                <li>@Html.ActionLink("Analytics", "Analytics", "Project")</li>
                <li>@Html.ActionLink("Notifications", "Notifications", "Project")</li>
            </ul>
        </div>
    </div>
</div>

<div class="container">
<div class="row">
   

    <div class="col-md-9 col-md-push-3">
        <div class="well">
            <h2 style="color: #6e6e6e">Tasks </h2> <br />

            <!--scroll in well block done here-->
            <div style=" overflow-x: hidden; overflow-y: auto; height: 532px;">
                <table class="table" style="color: #6e6e6e">
                    <tr>
                        <th>
                            @Html.ActionLink("Title", "Task", new { sortOrder = ViewBag.TitleSortParm })
                        </th>
                        <th>
                            @Html.ActionLink("DueDate", "Task", new { sortOrder = ViewBag.DueDateSortParm })
                        </th>
                        <th>
                            @Html.ActionLink("Status", "Task", new { sortOrder = ViewBag.StatusSortParm })
                        </th>
                        <th></th>
                    </tr>
                    @{
                        bool Overdue = false;
                        bool Today = false;
                        bool Tomorrow = false;
                        bool ThisWeek = false;
                        bool NextWeek = false;
                        bool LaterOn = false;
                    }


                    @foreach (var item in Model)
                    {
                        if (item.DueDate < DateTime.Today && Overdue == false)
                        {
                            Overdue = true;
                            <tr style="background-color:lightgray">
                                <th style="width:inherit">Overdue</th>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                        }

                        if (item.DueDate == DateTime.Today && Today == false)
                        {
                            Today = true;
                            <tr style="background-color:lightgray">
                                <th style="width:inherit">Today</th>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                        }

                        if (item.DueDate == DateTime.Today.AddDays(1) && Tomorrow == false)
                        {
                            Tomorrow = true;
                            <tr style="background-color:lightgray">
                                <th style="width:inherit">Tomorrow</th>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                        }

                        if (item.DueDate == DateTime.Today.AddDays(2) && ThisWeek == false)
                        {
                            ThisWeek = true;
                            <tr style="background-color:lightgray">
                                <th style="width:inherit">This Week</th>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                        }

                        if (item.DueDate == DateTime.Today.AddDays(7) && NextWeek == false)
                        {
                            NextWeek = true;
                            <tr style="background-color:lightgray">
                                <th style="width:inherit">Next Week</th>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                        }

                        if (item.DueDate > DateTime.Today.AddDays(7) && LaterOn == false)
                        {
                            LaterOn = true;
                            <tr style="background-color:lightgray">
                                <th style="width:inherit">Later on</th>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                        }

                        <tr>
                            <td>
                                @Html.ActionLink((item.Title), "Details", new { id = item.ID })
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DueDate)
                            </td>
                            <th>
                                @Html.DisplayFor(modelItem => item.Status)
                            </th>

                            <td>
                                @Html.ActionLink("Create", "Create", new { id = item.ID }) |
                                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>


    <div class="col-md-3 col-md-pull-9">
        <div class=" well">
            <div>
                <!--*************1/3 Task view goes here******************-->
                <!--Task Outline Toggle is redundent with the Navbar-->
                <h2 style="color: #6e6e6e">Outline</h2>
                <br />
                <!--scroll in well block done here-->
                <div style=" overflow-x: hidden; overflow-y: auto; height: 532px; color:#6e6e6e">
                    @Html.Partial("_Outline")
                </div>
            </div>
        </div>
    </div>

</div>
</div>
