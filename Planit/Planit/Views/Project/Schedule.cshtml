@model IEnumerable<Planit.Core.Project>
@{
    ViewBag.Title = "Schedule";
}

<link rel='stylesheet' type='text/css' href='fullcalendar.css' />

<head>
    <title></title>

    <script type='text/javascript'>

        $(document).ready(function () {

            var date = new Date();

            var d = date.getDate();

            var m = date.getMonth();

            var y = date.getFullYear();

            $('#calendar').fullCalendar({

                header: {

                    left: 'prev,next today',

                    center: 'title',

                    right: 'month,agendaWeek,agendaDay'

                },

                editable: true,

                events: [

                {

                    title: 'All Day Event',

                    start: new Date(y, m, 1)

                },

                {

                    title: 'Long Event',

                    start: new Date(y, m, d - 5),

                    end: new Date(y, m, d - 2)

                },

                {

                    id: 999,

                    title: 'Repeating Event',

                    start: new Date(y, m, d - 3, 16, 0),

                    allDay: false

                },

                @foreach (var item in Model)
                {
                @:{

                    @:title: '@item.Title',

                    @:start: new Date(Date.parse("@item.StartDate.ToUniversalTime()")),

                    @:end: new Date(Date.parse("@item.DueDate.ToUniversalTime()"))

                @:},
                }

                
            

                    //json object
                    //you can do it all in the controller and pass it here
                    // or do it here like we did below with razor
                    //google charts uses json to pass the data
                    //create a function in the controller that converts the model to jquery


                   
            
            

             

                ]

            });

        });

        //create a helper that converts our objects (model) to calender structure.  That way when we use fullCalender...
        //maybe you can create your own by extending the helping
       // var something =  @Json.Encode(Model);
        //got to the microsoft decument for encode
        //microsoftsdn

        //option 2 - easier
        //create a javascript function that is going to recieve json data in the model format and rewrite into the calendar format
        //second suggestion is to change the model

    </script>

</head>





<div class="container">
    <div class="container">
        
        <div class="navbar-header navbar-fixed-top">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <!--Disabled
            @Html.ActionLink("Tree", "Outline", "Task", null, new { @class = "navbar-brand" })
                -->
        </div>

        <!--Not sure how to make the inner nav bar like the outer nav bar that goes across the outer nav bar length-->
        <div>
            <!--pagination makes the -->
            <ul class="navbar nav pagination ">
                <li>@Html.ActionLink("Tree", "Tree", "Project")</li>
                <li>@Html.ActionLink("Outline", "Outline", "Project")</li>
                <li>@Html.ActionLink("Task", "Task", "Project")</li>
                <!--Added these links to the nav bar-->
                <li class="active">@Html.ActionLink("Schedule", "Schedule", "Project")</li>
                <li>@Html.ActionLink("Dashboard", "Dashboard", "Project")</li>
                <li>@Html.ActionLink("Analytics", "Contact", "Home")</li>
                <li>@Html.ActionLink("Notifications", "Contact", "Home")</li>

            </ul>

        </div>
    </div>
</div>



<div class="row">

    <div class=" well col-md-3">

        <div>
            <!--*************1/3  partial Task & Outline views goe here******************-->
            <ul class="navbar nav pagination ">
                <!--These are supposed to be the link to the partial views but I'm not sure how to have these go to the partial veiws below-->
                <li>@Html.ActionLink("Outline", "_Outline", "Shared")</li>
                <li>@Html.ActionLink("Task", "_Task", "Shared")</li>
                </ul>

            <!--What doe we do about this?  Element "tr" cannot be nested inside element "div"-->
            <!--These are the partial views-->
            @Html.Partial("_Outline", Model)
             @Html.Partial("_Task", Model)
            
            <div style=" overflow-x: hidden; overflow-y: auto; height: 532px;">
            <table class="table table-condensed">      

                @foreach (var item in Model)
                {
                    <tr>
                        <td>

                            @for (int i = 0; i < item.Depth * 3; i++) // item.Depth * 3 is to make the difference between parent child more drastic
                            {
                                <p style="display:inline;">-</p>
                            }

                            @Html.DisplayFor(modelItem => item.Title)

                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DueDate)
                        </td>
                    </tr>
                }

            </table>
                </div>
        
        </div>
    </div>

    <div class="col-md-9">
        <div class="well">
           <!----You Rock Beth, Wunda, Wunda, Wunda. . . Wunda Woman-->       
            <div id='calendar'>
            </div>

        </div>
    </div>
</div>

