/*!
 * FullCalendar v2.0.0-beta2
 * Docs & License: http://arshaw.com/fullcalendar/
 * (c) 2013 Adam Shaw
 */
(function (a) { if (typeof define === "function" && define.amd) { define(["jquery", "moment"], a) } else { a(jQuery, moment) } })(function (aB, A) { var P = { lang: "en", defaultTimedEventDuration: "02:00:00", defaultAllDayEventDuration: { days: 1 }, forceEventDuration: false, nextDayThreshold: "09:00:00", defaultView: "month", aspectRatio: 1.35, header: { left: "prev, next today", center: "title", right: "month, agendaWeek, agendaDay" }, weekends: true, weekNumbers: false, weekNumberTitle: "W", weekNumberCalculation: "local", lazyFetching: true, startParam: "start", endParam: "end", timezoneParam: "timezone", titleFormat: { month: "MMM 'YY", week: "ll", day: "LL" }, columnFormat: { month: "ddd", week: X, day: "dddd" }, timeFormat: { "default": v }, isRTL: false, buttonText: { prev: "<", next: ">", prevYear: "prev year", nextYear: "next year", today: "T", month: "M", week: "W", day: "D" }, buttonIcons: { prev: "left-single-arrow", next: "right-single-arrow", prevYear: "left-double-arrow", nextYear: "right-double-arrow" }, theme: false, themeButtonIcons: { prev: "circle-triangle-w", next: "circle-triangle-e", prevYear: "seek-prev", nextYear: "seek-next" }, unselectAuto: true, dropAccept: "*", handleWindowResize: true }; function v(aT, aS) { return aS.longDateFormat("LT").replace(":mm", "(:mm)").replace(/(\Wmm)$/, "($1)").replace(/\s*a$/i, "t") } function X(aT, aS) { var aU = aS.longDateFormat("L"); aU = aU.replace(/^Y+[^\w\s]*|[^\w\s]*Y+$/g, ""); if (aT.isRTL) { aU += " ddd" } else { aU = "ddd " + aU } return aU } var aE = { en: { columnFormat: { week: "ddd M/D" } } }; var U = { header: { left: "next,prev today", center: "", right: "title" }, buttonIcons: { prev: "right-single-arrow", next: "left-single-arrow", prevYear: "right-double-arrow", nextYear: "left-double-arrow" }, themeButtonIcons: { prev: "circle-triangle-e", next: "circle-triangle-w", nextYear: "seek-prev", prevYear: "seek-next" } }; var aJ = aB.fullCalendar = { version: "2.0.0-beta2" }; var ak = aJ.views = {}; aB.fn.fullCalendar = function (aT) { var aS = Array.prototype.slice.call(arguments, 1); var aU = this; this.each(function (aX, aV) { var aW = aB(aV); var aZ = aW.data("fullCalendar"); var aY; if (typeof aT === "string") { if (aZ && aB.isFunction(aZ[aT])) { aY = aZ[aT].apply(aZ, aS); if (!aX) { aU = aY } if (aT === "destroy") { aW.removeData("fullCalendar") } } } else { if (!aZ) { aZ = new q(aW, aT); aW.data("fullCalendar", aZ); aZ.render() } } }); return aU }; function ao(aS) { aI(P, aS) } function aI(aU) { function aT(aV, aW) { if (aB.isPlainObject(aW) && aB.isPlainObject(aU[aV]) && !V(aV)) { aU[aV] = aI({}, aU[aV], aW) } else { if (aW !== undefined) { aU[aV] = aW } } } for (var aS = 1; aS < arguments.length; aS++) { aB.each(arguments[aS], aT) } return aU } function V(aS) { return /(Time|Duration)$/.test(aS) } aJ.langs = aE; aJ.datepickerLang = function (aV, aS, aT) { var aU = aE[aV]; if (!aU) { aU = aE[aV] = {} } aI(aU, { isRTL: aT.isRTL, weekNumberTitle: aT.weekHeader, titleFormat: { month: aT.showMonthAfterYear ? "YYYY[" + aT.yearSuffix + "] MMMM" : "MMMM YYYY[" + aT.yearSuffix + "]" }, buttonText: { prev: f(aT.prevText), next: f(aT.nextText), today: f(aT.currentText) } }); if (aB.datepicker) { aB.datepicker.regional[aS] = aB.datepicker.regional[aV] = aT; aB.datepicker.regional.en = aB.datepicker.regional[""]; aB.datepicker.setDefaults(aT) } }; aJ.lang = function (aU, aS) { var aT; if (aS) { aT = aE[aU]; if (!aT) { aT = aE[aU] = {} } aI(aT, aS || {}) } P.lang = aU }; function q(bf, ba) { var bJ = this; ba = ba || {}; var bm = aI({}, P, ba); var by; if (bm.lang in aE) { by = aE[bm.lang] } else { by = aE[P.lang] } if (by) { bm = aI({}, P, by, ba) } if (bm.isRTL) { bm = aI({}, P, U, by || {}, ba) } bJ.options = bm; bJ.render = bw; bJ.destroy = bL; bJ.refetchEvents = a7; bJ.reportEvents = bc; bJ.reportEventChange = bN; bJ.rerenderEvents = aW; bJ.changeView = a5; bJ.select = bK; bJ.unselect = a6; bJ.prev = bs; bJ.next = aV; bJ.prevYear = bM; bJ.nextYear = aT; bJ.today = bg; bJ.gotoDate = bv; bJ.incrementDate = bj; bJ.getDate = bk; bJ.getCalendar = bB; bJ.getView = bp; bJ.option = bG; bJ.trigger = bu; var aX = N(A.langData(bm.lang)); if (bm.monthNames) { aX._months = bm.monthNames } if (bm.monthNamesShort) { aX._monthsShort = bm.monthNamesShort } if (bm.dayNames) { aX._weekdays = bm.dayNames } if (bm.dayNamesShort) { aX._weekdaysShort = bm.dayNamesShort } if (bm.firstDay) { var aU = N(aX._week); aU.dow = bm.firstDay; aX._week = aU } bJ.defaultAllDayEventDuration = A.duration(bm.defaultAllDayEventDuration); bJ.defaultTimedEventDuration = A.duration(bm.defaultTimedEventDuration); bJ.moment = function () { var bS; if (bm.timezone === "local") { bS = aJ.moment.apply(null, arguments) } else { if (bm.timezone === "UTC") { bS = aJ.moment.utc.apply(null, arguments) } else { bS = aJ.moment.parseZone.apply(null, arguments) } } bS._lang = aX; return bS }; bJ.getIsAmbigTimezone = function () { return bm.timezone !== "local" && bm.timezone !== "UTC" }; bJ.rezoneDate = function (bS) { return bJ.moment(bS.toArray()) }; bJ.getNow = function () { var bS = bm.now; if (typeof bS === "function") { bS = bS() } return bJ.moment(bS) }; bJ.calculateWeekNumber = function (bT) { var bS = bm.weekNumberCalculation; if (typeof bS === "function") { return bS(bT) } else { if (bS === "local") { return bT.week() } else { if (bS.toUpperCase() === "ISO") { return bT.isoWeek() } } } }; bJ.getEventEnd = function (bS) { if (bS.end) { return bS.end.clone() } else { return bJ.getDefaultEventEnd(bS.allDay, bS.start) } }; bJ.getDefaultEventEnd = function (bT, bU) { var bS = bU.clone(); if (bT) { bS.stripTime().add(bJ.defaultAllDayEventDuration) } else { bS.add(bJ.defaultTimedEventDuration) } if (bJ.getIsAmbigTimezone()) { bS.stripZone() } return bS }; bJ.formatRange = function (bU, bT, bS) { if (typeof bS === "function") { bS = bS.call(bJ, bm, aX) } return K(bU, bT, bS, null, bm.isRTL) }; bJ.formatDate = function (bT, bS) { if (typeof bS === "function") { bS = bS.call(bJ, bm, aX) } return C(bT, bS) }; p.call(bJ, bm); var aS = bJ.isFetchNeeded; var bQ = bJ.fetchEvents; var bH = bf[0]; var aZ; var bx; var a9; var bR; var a8; var bt; var a2; var bz = 0; var bI = 0; var bO; var bo = []; var a0; if (bm.defaultDate != null) { bO = bJ.moment(bm.defaultDate) } else { bO = bJ.getNow() } function bw(bS) { if (!a9) { bn() } else { if (bE()) { bA(); bP(bS) } } } function bn() { bR = bm.theme ? "ui" : "fc"; bf.addClass("fc"); if (bm.isRTL) { bf.addClass("fc-rtl") } else { bf.addClass("fc-ltr") } if (bm.theme) { bf.addClass("ui-widget") } a9 = aB("<div class='fc-content' />").prependTo(bf); aZ = new W(bJ, bm); bx = aZ.render(); if (bx) { bf.prepend(bx) } a5(bm.defaultView); if (bm.handleWindowResize) { aB(window).resize(bb) } if (!be()) { a4() } } function a4() { setTimeout(function () { if (!a8.start && be()) { bl() } }, 0) } function bL() { if (a8) { bu("viewDestroy", a8, a8, a8.element); a8.triggerEventDestroy() } aB(window).unbind("resize", bb); aZ.destroy(); a9.remove(); bf.removeClass("fc fc-rtl ui-widget") } function bE() { return bf.is(":visible") } function be() { return aB("body").is(":visible") } function a5(bS) { if (!a8 || bS != a8.name) { bC(bS) } } function bC(bS) { bI++; if (a8) { bu("viewDestroy", a8, a8, a8.element); a6(); a8.triggerEventDestroy(); aY(); a8.element.remove(); aZ.deactivateButton(a8.name) } aZ.activateButton(bS); a8 = new ak[bS](aB("<div class='fc-view fc-view-" + bS + "' />").appendTo(a9), bJ); bl(); bd(); bI-- } function bl(bS) { if (!a8.start || bS || !bO.isWithin(a8.intervalStart, a8.intervalEnd)) { if (bE()) { bP(bS) } } } function bP(bS) { bI++; if (a8.start) { bu("viewDestroy", a8, a8, a8.element); a6(); bq() } aY(); if (bS) { bO = a8.incrementDate(bO, bS) } a8.render(bO.clone()); bF(); bd(); (a8.afterRender || ax)(); bh(); br(); bu("viewRender", a8, a8, a8.element); bI--; a3() } function bi() { if (bE()) { a6(); bq(); bA(); bF(); a1() } } function bA() { if (bm.contentHeight) { a2 = bm.contentHeight } else { if (bm.height) { a2 = bm.height - (bx ? bx.height() : 0) - G(a9) } else { a2 = Math.round(a9.width() / Math.max(bm.aspectRatio, 0.5)) } } } function bF() { if (a2 === undefined) { bA() } bI++; a8.setHeight(a2); a8.setWidth(a9.width()); bI--; bt = bf.outerWidth() } function bb() { if (!bI) { if (a8.start) { var bS = ++bz; setTimeout(function () { if (bS == bz && !bI && bE()) { if (bt != (bt = bf.outerWidth())) { bI++; bi(); a8.trigger("windowResize", bH); bI-- } } }, 200) } else { a4() } } } function a7() { bq(); bD() } function aW(bS) { bq(); a1(bS) } function a1(bS) { if (bE()) { a8.renderEvents(bo, bS); a8.trigger("eventAfterAllRender") } } function bq() { a8.triggerEventDestroy(); a8.clearEvents(); a8.clearEventData() } function a3() { if (!bm.lazyFetching || aS(a8.start, a8.end)) { bD() } else { a1() } } function bD() { bQ(a8.start, a8.end) } function bc(bS) { bo = bS; a1() } function bN(bS) { aW(bS) } function bh() { aZ.updateTitle(a8.title) } function br() { var bS = bJ.getNow(); if (bS.isWithin(a8.intervalStart, a8.intervalEnd)) { aZ.disableButton("today") } else { aZ.enableButton("today") } } function bK(bT, bS) { a8.select(bT, bS) } function a6() { if (a8) { a8.unselect() } } function bs() { bl(-1) } function aV() { bl(1) } function bM() { bO.add("years", -1); bl() } function aT() { bO.add("years", 1); bl() } function bg() { bO = bJ.getNow(); bl() } function bv(bS) { bO = bJ.moment(bS); bl() } function bj() { bO.add.apply(bO, arguments); bl() } function bk() { return bO.clone() } function aY() { a9.css({ width: "100%", height: a9.height(), overflow: "hidden" }) } function bd() { a9.css({ width: "", height: "", overflow: "" }) } function bB() { return bJ } function bp() { return a8 } function bG(bS, bT) { if (bT === undefined) { return bm[bS] } if (bS == "height" || bS == "contentHeight" || bS == "aspectRatio") { bm[bS] = bT; bi() } } function bu(bS, bT) { if (bm[bS]) { return bm[bS].apply(bT || bH, Array.prototype.slice.call(arguments, 2)) } } if (bm.droppable) { aB(document).bind("dragstart", function (bU, bV) { var bS = bU.target; var bW = aB(bS); if (!bW.parents(".fc").length) { var bT = bm.dropAccept; if (aB.isFunction(bT) ? bT.call(bS, bW) : bW.is(bT)) { a0 = bS; a8.dragStart(a0, bU, bV) } } }).bind("dragstop", function (bS, bT) { if (a0) { a8.dragStop(a0, bS, bT); a0 = null } }) } } function W(aV, a4) { var a3 = this; a3.render = aT; a3.destroy = aZ; a3.updateTitle = aX; a3.activateButton = aS; a3.deactivateButton = a1; a3.disableButton = aU; a3.enableButton = aY; var aW = aB([]); var a0; function aT() { a0 = a4.theme ? "ui" : "fc"; var a5 = a4.header; if (a5) { aW = aB("<table class='fc-header ' style='width:100%'/>").append(aB("<tr/>").append(a2("left")).append(a2("center")).append(a2("right"))); return aW } } function aZ() { aW.remove() } function a2(a5) { var a7 = aB("<td class='fc-header-" + a5 + "'/>"); var a6 = a4.header[a5]; if (a6) { aB.each(a6.split(" "), function (a9) { if (a9 > 0) { a7.append("<span class='fc-header-space'/>") } var a8; aB.each(this.split(","), function (bc, bb) { if (bb == "title") { a7.append("<span class='fc-header-title'><h2>&nbsp;</h2></span>"); if (a8) { a8.addClass(a0 + "-corner-right") } a8 = null } else { var ba; if (aV[bb]) { ba = aV[bb] } else { if (ak[bb]) { ba = function () { bd.removeClass(a0 + "-state-hover"); aV.changeView(bb) } } } if (ba) { var bh = F(a4.themeButtonIcons, bb); var bg = F(a4.buttonIcons, bb); var bf = F(a4.buttonText, bb); var be; if (bh && a4.theme) { be = "<span class='ui-icon ui-icon-" + bh + "'></span>" } else { if (bg && !a4.theme) { be = "<span class='fc-icon fc-icon-" + bg + "'></span>" } else { be = aO(bf || bb) } } var bd = aB("<span class='fc-button fc-button-" + bb + " " + a0 + "-state-default'>" + be + "</span>").click(function () { if (!bd.hasClass(a0 + "-state-disabled")) { ba() } }).mousedown(function () { bd.not("." + a0 + "-state-active").not("." + a0 + "-state-disabled").addClass(a0 + "-state-down") }).mouseup(function () { bd.removeClass(a0 + "-state-down") }).hover(function () { bd.not("." + a0 + "-state-active").not("." + a0 + "-state-disabled").addClass(a0 + "-state-hover") }, function () { bd.removeClass(a0 + "-state-hover").removeClass(a0 + "-state-down") }).appendTo(a7); aR(bd); if (!a8) { bd.addClass(a0 + "-corner-left") } a8 = bd } } }); if (a8) { a8.addClass(a0 + "-corner-right") } }) } return a7 } function aX(a5) { aW.find("h2").html(a5) } function aS(a5) { aW.find("span.fc-button-" + a5).addClass(a0 + "-state-active") } function a1(a5) { aW.find("span.fc-button-" + a5).removeClass(a0 + "-state-active") } function aU(a5) { aW.find("span.fc-button-" + a5).addClass(a0 + "-state-disabled") } function aY(a5) { aW.find("span.fc-button-" + a5).removeClass(a0 + "-state-disabled") } } aJ.sourceNormalizers = []; aJ.sourceFetchers = []; var m = { dataType: "json", cache: false }; var Z = 1; function p(bd) { var bk = this; bk.isFetchNeeded = aS; bk.fetchEvents = bp; bk.addEventSource = a2; bk.removeEventSource = aW; bk.updateEvent = bh; bk.renderEvent = a9; bk.removeEvents = bo; bk.clientEvents = a3; bk.mutateEvent = aU; var bg = bk.trigger; var bf = bk.getView; var a7 = bk.reportEvents; var bl = bk.getEventEnd; var aZ = { events: [] }; var bi = [aZ]; var a5, a8; var bq = 0; var bc = 0; var br = 0; var a6 = []; var aY = bd.eventSources || []; if (bd.events) { aY.push(bd.events) } for (var bn = 0; bn < aY.length; bn++) { bb(aY[bn]) } function aS(bu, bt) { return !a5 || bu.clone().stripZone() < a5.clone().stripZone() || bt.clone().stripZone() > a8.clone().stripZone() } function bp(bx, bu) { a5 = bx; a8 = bu; a6 = []; var bw = ++bq; var bt = bi.length; bc = bt; for (var bv = 0; bv < bt; bv++) { ba(bi[bv], bw) } } function ba(bu, bt) { a0(bu, function (bw) { if (bt == bq) { if (bw) { for (var bv = 0; bv < bw.length; bv++) { var bx = aT(bw[bv], bu); if (bx) { a6.push(bx) } } } bc--; if (!bc) { a7(a6) } } }) } function a0(bt, bE) { var by; var bC = aJ.sourceFetchers; var bA; for (by = 0; by < bC.length; by++) { bA = bC[by].call(bk, bt, a5.clone(), a8.clone(), bd.timezone, bE); if (bA === true) { return } else { if (typeof bA == "object") { a0(bA, bE); return } } } var bG = bt.events; if (bG) { if (aB.isFunction(bG)) { a1(); bG.call(bk, a5.clone(), a8.clone(), bd.timezone, function (bI) { bE(bI); aX() }) } else { if (aB.isArray(bG)) { bE(bG) } else { bE() } } } else { var bu = bt.url; if (bu) { var bF = bt.success; var bB = bt.error; var bv = bt.complete; var bH; if (aB.isFunction(bt.data)) { bH = bt.data() } else { bH = bt.data } var bx = aB.extend({}, bH || {}); var bz = aP(bt.startParam, bd.startParam); var bw = aP(bt.endParam, bd.endParam); var bD = aP(bt.timezoneParam, bd.timezoneParam); if (bz) { bx[bz] = a5.format() } if (bw) { bx[bw] = a8.format() } if (bd.timezone && bd.timezone != "local") { bx[bD] = bd.timezone } a1(); aB.ajax(aB.extend({}, m, bt, { data: bx, success: function (bJ) { bJ = bJ || []; var bI = J(bF, this, arguments); if (aB.isArray(bI)) { bJ = bI } bE(bJ) }, error: function () { J(bB, this, arguments); bE() }, complete: function () { J(bv, this, arguments); aX() } })) } else { bE() } } } function a2(bt) { bt = bb(bt); if (bt) { bc++; ba(bt, bq) } } function bb(bt) { if (aB.isFunction(bt) || aB.isArray(bt)) { bt = { events: bt } } else { if (typeof bt == "string") { bt = { url: bt } } } if (typeof bt == "object") { aV(bt); bi.push(bt); return bt } } function aW(bt) { bi = aB.grep(bi, function (bu) { return !bj(bu, bt) }); a6 = aB.grep(a6, function (bu) { return !bj(bu.source, bt) }); a7(a6) } function bh(bt) { aU(bt); bs(bt); a7(a6) } var bm = ["title", "url", "allDay", "className", "editable", "color", "backgroundColor", "borderColor", "textColor"]; function bs(bw) { var bu; var bv; var bt; var bx; for (bu = 0; bu < a6.length; bu++) { bv = a6[bu]; if (bv._id == bw._id && bv !== bw) { for (bt = 0; bt < bm.length; bt++) { bx = bm[bt]; if (bw[bx] !== undefined) { bv[bx] = bw[bx] } } } } } function a9(bv, bt) { var bu = aT(bv); if (bu) { if (!bu.source) { if (bt) { aZ.events.push(bu); bu.source = aZ } a6.push(bu) } a7(a6) } } function bo(bu) { var bt; if (!bu) { a6 = []; for (bt = 0; bt < bi.length; bt++) { if (aB.isArray(bi[bt].events)) { bi[bt].events = [] } } } else { if (!aB.isFunction(bu)) { var bv = bu + ""; bu = function (bw) { return bw._id == bv } } a6 = aB.grep(a6, bu, true); for (bt = 0; bt < bi.length; bt++) { if (aB.isArray(bi[bt].events)) { bi[bt].events = aB.grep(bi[bt].events, bu, true) } } } a7(a6) } function a3(bt) { if (aB.isFunction(bt)) { return aB.grep(a6, bt) } else { if (bt) { bt += ""; return aB.grep(a6, function (bu) { return bu._id == bt }) } } return a6 } function a1() { if (!(br++)) { bg("loading", null, true, bf()) } } function aX() { if (!(--br)) { bg("loading", null, false, bf()) } } function aT(by, bx) { var bu = {}; var bz; var bt; var bw; var bv; if (bd.eventDataTransform) { by = bd.eventDataTransform(by) } if (bx && bx.eventDataTransform) { by = bx.eventDataTransform(by) } bz = bk.moment(by.start || by.date); if (!bz.isValid()) { return } bt = null; if (by.end) { bt = bk.moment(by.end); if (!bt.isValid()) { return } } bw = by.allDay; if (bw === undefined) { bv = aP(bx ? bx.allDayDefault : undefined, bd.allDayDefault); if (bv !== undefined) { bw = bv } else { bw = !bz.hasTime() && (!bt || !bt.hasTime()) } } if (bw) { if (bz.hasTime()) { bz.stripTime() } if (bt && bt.hasTime()) { bt.stripTime() } } else { if (!bz.hasTime()) { bz = bk.rezoneDate(bz) } if (bt && !bt.hasTime()) { bt = bk.rezoneDate(bt) } } aB.extend(bu, by); if (bx) { bu.source = bx } bu._id = by._id || (by.id === undefined ? "_fc" + Z++ : by.id + ""); if (by.className) { if (typeof by.className == "string") { bu.className = by.className.split(/\s+/) } else { bu.className = by.className } } else { bu.className = [] } bu.allDay = bw; bu.start = bz; bu.end = bt; if (bd.forceEventDuration && !bu.end) { bu.end = bl(bu) } ag(bu); return bu } function aU(bu, bz, bx) { var bC = bu._allDay; var by = bu._start; var bB = bu._end; var bt = false; var bv; var bw; var bA; if (!bz && !bx) { bz = bu.start; bx = bu.end } if (bu.allDay != bC) { bv = bu.allDay } else { bv = !(bz || bx).hasTime() } if (bv) { if (bz) { bz = bz.clone().stripTime() } if (bx) { bx = bx.clone().stripTime() } } if (bz) { if (bv) { bw = aA(bz, by.clone().stripTime()) } else { bw = aA(bz, by) } } if (bv != bC) { bt = true } else { if (bx) { bA = aA(bx || bk.getDefaultEventEnd(bv, bz || by), bz || by).subtract(aA(bB || bk.getDefaultEventEnd(bC, by), by)) } } return be(a3(bu._id), bt, bv, bw, bA) } function be(bx, bz, bv, by, bw) { var bu = bk.getIsAmbigTimezone(); var bt = []; aB.each(bx, function (bB, bG) { var bF = bG._allDay; var bE = bG._start; var bC = bG._end; var bH = bv != null ? bv : bF; var bA = bE.clone(); var bD = (!bz && bC) ? bC.clone() : null; if (bH) { bA.stripTime(); if (bD) { bD.stripTime() } } else { if (!bA.hasTime()) { bA = bk.rezoneDate(bA) } if (bD && !bD.hasTime()) { bD = bk.rezoneDate(bD) } } if (!bD && (bd.forceEventDuration || +bw)) { bD = bk.getDefaultEventEnd(bH, bA) } bA.add(by); if (bD) { bD.add(by).add(bw) } if (bu) { if (+by) { bA.stripZone() } if (bD && (+by || +bw)) { bD.stripZone() } } bG.allDay = bH; bG.start = bA; bG.end = bD; ag(bG); bt.push(function () { bG.allDay = bF; bG.start = bE; bG.end = bC; ag(bG) }) }); return function () { for (var bA = 0; bA < bt.length; bA++) { bt[bA]() } } } function aV(bv) { if (bv.className) { if (typeof bv.className == "string") { bv.className = bv.className.split(/\s+/) } } else { bv.className = [] } var bu = aJ.sourceNormalizers; for (var bt = 0; bt < bu.length; bt++) { bu[bt].call(bk, bv) } } function bj(bu, bt) { return bu && bt && a4(bu) == a4(bt) } function a4(bt) { return ((typeof bt == "object") ? (bt.events || bt.url) : "") || bt } } function ag(aS) { aS._allDay = aS.allDay; aS._start = aS.start.clone(); aS._end = aS.end ? aS.end.clone() : null } aJ.applyAll = J; function N(aS) { var aT = function () { }; aT.prototype = aS; return new aT() } function ab(aT, aS) { for (var aU in aS) { if (aS.hasOwnProperty(aU)) { aT[aU] = aS[aU] } } } var S = ["sun", "mon", "tue", "wed", "thu", "fri", "sat"]; function aA(aS, aT) { return A.duration({ days: aS.clone().stripTime().diff(aT.clone().stripTime(), "days"), ms: aS.time() - aT.time() }) } function H(aS) { return Object.prototype.toString.call(aS) === "[object Date]" || aS instanceof Date } function s(aT, aS, aU) { aT.unbind("mouseover").mouseover(function (aY) { var aX = aY.target, aZ, aW, aV; while (aX != this) { aZ = aX; aX = aX.parentNode } if ((aW = aZ._fci) !== undefined) { aZ._fci = undefined; aV = aS[aW]; aU(aV.event, aV.element, aV); aB(aY.target).trigger(aY) } aY.stopPropagation() }) } function aC(aU, aV, aS) { for (var aT = 0, aW; aT < aU.length; aT++) { aW = aB(aU[aT]); aW.width(Math.max(0, aV - j(aW, aS))) } } function ae(aV, aS, aT) { for (var aU = 0, aW; aU < aV.length; aU++) { aW = aB(aV[aU]); aW.height(Math.max(0, aS - G(aW, aT))) } } function j(aT, aS) { return am(aT) + o(aT) + (aS ? al(aT) : 0) } function am(aS) { return (parseFloat(aB.css(aS[0], "paddingLeft", true)) || 0) + (parseFloat(aB.css(aS[0], "paddingRight", true)) || 0) } function al(aS) { return (parseFloat(aB.css(aS[0], "marginLeft", true)) || 0) + (parseFloat(aB.css(aS[0], "marginRight", true)) || 0) } function o(aS) { return (parseFloat(aB.css(aS[0], "borderLeftWidth", true)) || 0) + (parseFloat(aB.css(aS[0], "borderRightWidth", true)) || 0) } function G(aT, aS) { return x(aT) + aw(aT) + (aS ? k(aT) : 0) } function x(aS) { return (parseFloat(aB.css(aS[0], "paddingTop", true)) || 0) + (parseFloat(aB.css(aS[0], "paddingBottom", true)) || 0) } function k(aS) { return (parseFloat(aB.css(aS[0], "marginTop", true)) || 0) + (parseFloat(aB.css(aS[0], "marginBottom", true)) || 0) } function aw(aS) { return (parseFloat(aB.css(aS[0], "borderTopWidth", true)) || 0) + (parseFloat(aB.css(aS[0], "borderBottomWidth", true)) || 0) } function ax() { } function a(aT, aS) { return aT - aS } function ay(aS) { return Math.max.apply(Math, aS) } function F(aW, aS) { if (aW[aS] !== undefined) { return aW[aS] } var aV = aS.split(/(?=[A-Z])/), aU = aV.length - 1, aT; for (; aU >= 0; aU--) { aT = aW[aV[aU].toLowerCase()]; if (aT !== undefined) { return aT } } return aW["default"] } function aO(aS) { return (aS + "").replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&#039;").replace(/"/g, "&quot;").replace(/\n/g, "<br />") } function f(aS) { return aS.replace(/&.*?;/g, "") } function aR(aS) { aS.attr("unselectable", "on").css("MozUserSelect", "none").bind("selectstart.ui", function () { return false }) } function h(aS) { aS.children().removeClass("fc-first fc-last").filter(":first-child").addClass("fc-first").end().filter(":last-child").addClass("fc-last") } function T(aT, aU) { var aS = aT.source || {}; var aZ = aT.color; var aX = aS.color; var aW = aU("eventColor"); var a0 = aT.backgroundColor || aZ || aS.backgroundColor || aX || aU("eventBackgroundColor") || aW; var aV = aT.borderColor || aZ || aS.borderColor || aX || aU("eventBorderColor") || aW; var a1 = aT.textColor || aS.textColor || aU("eventTextColor"); var aY = []; if (a0) { aY.push("background-color:" + a0) } if (aV) { aY.push("border-color:" + aV) } if (a1) { aY.push("color:" + a1) } return aY.join(";") } function J(aV, aW, aT) { if (aB.isFunction(aV)) { aV = [aV] } if (aV) { var aU; var aS; for (aU = 0; aU < aV.length; aU++) { aS = aV[aU].apply(aW, aT) || aS } return aS } } function aP() { for (var aS = 0; aS < arguments.length; aS++) { if (arguments[aS] !== undefined) { return arguments[aS] } } } var w = /^\s*\d{4}-\d\d$/; var O = /^\s*\d{4}-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?)?$/; aJ.moment = function () { return y(arguments) }; aJ.moment.utc = function () { return y(arguments, true) }; aJ.moment.parseZone = function () { return y(arguments, true, true) }; function y(aY, aX, aW) { var a0 = aY[0]; var aV = aY.length == 1 && typeof a0 === "string"; var aU = false; var aZ = false; var aS; var aT; if (aV) { if (w.test(a0)) { a0 += "-01"; aU = true; aZ = true } else { if ((aS = O.exec(a0))) { aU = !aS[5]; aZ = true } } } else { if (aB.isArray(a0)) { aZ = true } } if (aX || aW || aU) { aT = A.utc.apply(A, aY) } else { aT = A.apply(null, aY) } if (A.isMoment(a0)) { r(a0, aT) } if (aU) { aT._ambigTime = true; aT._ambigZone = true } if (aW) { if (aZ) { aT._ambigZone = true } else { if (aV) { aT.zone(a0) } else { if (H(a0) || a0 === undefined) { aT.local() } } } } return new d(aT) } function d(aS) { ab(this, aS) } d.prototype = N(A.fn); d.prototype.clone = function () { return y([this]) }; d.prototype.time = function (aS) { if (aS == null) { return A.duration({ hours: this.hours(), minutes: this.minutes(), seconds: this.seconds(), milliseconds: this.milliseconds() }) } else { delete this._ambigTime; if (!A.isDuration(aS) && !A.isMoment(aS)) { aS = A.duration(aS) } return this.hours(aS.hours() + aS.days() * 24).minutes(aS.minutes()).seconds(aS.seconds()).milliseconds(aS.milliseconds()) } }; d.prototype.stripTime = function () { var aS = this.toArray(); A.fn.utc.call(this); this._ambigTime = true; this._ambigZone = true; this.year(aS[0]).month(aS[1]).date(aS[2]).hours(0).minutes(0).seconds(0).milliseconds(0); return this }; d.prototype.hasTime = function () { return !this._ambigTime }; d.prototype.stripZone = function () { var aS = this.toArray(); A.fn.utc.call(this); this._ambigZone = true; this.year(aS[0]).month(aS[1]).date(aS[2]).hours(aS[3]).minutes(aS[4]).seconds(aS[5]).milliseconds(aS[6]); return this }; d.prototype.hasZone = function () { return !this._ambigZone }; d.prototype.zone = function (aS) { if (aS != null) { delete this._ambigZone } return A.fn.zone.apply(this, arguments) }; d.prototype.local = function () { delete this._ambigZone; return A.fn.local.apply(this, arguments) }; d.prototype.utc = function () { delete this._ambigZone; return A.fn.utc.apply(this, arguments) }; d.prototype.format = function () { if (arguments[0]) { return C(this, arguments[0]) } if (this._ambigTime) { return au(this, "YYYY-MM-DD") } if (this._ambigZone) { return au(this, "YYYY-MM-DD[T]HH:mm:ss") } return au(this) }; d.prototype.toISOString = function () { if (this._ambigTime) { return au(this, "YYYY-MM-DD") } if (this._ambigZone) { return au(this, "YYYY-MM-DD[T]HH:mm:ss") } return A.fn.toISOString.apply(this, arguments) }; d.prototype.isWithin = function (aU, aT) { var aS = ar([this, aU, aT]); return aS[0] >= aS[1] && aS[0] < aS[2] }; aB.each(["isBefore", "isAfter", "isSame"], function (aT, aS) { d.prototype[aS] = function (aW, aV) { var aU = ar([this, aW]); return A.fn[aS].call(aU[0], aU[1], aV) } }); function r(aT, aS) { if (aT._ambigTime) { aS._ambigTime = true } else { if (aS._ambigTime) { delete aS._ambigTime } } if (aT._ambigZone) { aS._ambigZone = true } else { if (aS._ambigZone) { delete aS._ambigZone } } } function ar(aS) { var aW = []; var aT = false; var aV = false; var aU; for (aU = 0; aU < aS.length; aU++) { aW.push(aJ.moment(aS[aU])); aT = aT || aW[aU]._ambigTime; aV = aV || aW[aU]._ambigZone } for (aU = 0; aU < aW.length; aU++) { if (aT) { aW[aU].stripTime() } else { if (aV) { aW[aU].stripZone() } } } return aW } function au(aT, aS) { return A.fn.format.call(aT, aS) } function C(aT, aS) { return aL(aT, t(aS)) } function aL(aS, aV) { var aU = ""; var aT; for (aT = 0; aT < aV.length; aT++) { aU += R(aS, aV[aT]) } return aU } var e = { t: function (aS) { return au(aS, "a").charAt(0) }, T: function (aS) { return au(aS, "A").charAt(0) } }; function R(aT, aS) { var aU; var aV; if (typeof aS === "string") { return aS } else { if ((aU = aS.token)) { if (e[aU]) { return e[aU](aT) } return au(aT, aU) } else { if (aS.maybe) { aV = aL(aT, aS.maybe); if (aV.match(/[1-9]/)) { return aV } } } } return "" } function K(aW, aU, aS, aV, aT) { aS = aW.lang().longDateFormat(aS) || aS; aV = aV || " - "; return aj(aW, aU, t(aS), aV, aT) } aJ.formatRange = K; function aj(a5, a3, aX, aW, aT) { var a1; var a4; var aV = ""; var aS; var aZ = ""; var a2; var a0 = ""; var aY = ""; var aU = ""; for (a4 = 0; a4 < aX.length; a4++) { a1 = az(a5, a3, aX[a4]); if (a1 === false) { break } aV += a1 } for (aS = aX.length - 1; aS > a4; aS--) { a1 = az(a5, a3, aX[aS]); if (a1 === false) { break } aZ = a1 + aZ } for (a2 = a4; a2 <= aS; a2++) { a0 += R(a5, aX[a2]); aY += R(a3, aX[a2]) } if (a0 || aY) { if (aT) { aU = aY + aW + a0 } else { aU = a0 + aW + aY } } return aV + aU + aZ } var aH = { Y: "year", M: "month", D: "day", d: "day" }; function az(aW, aV, aS) { var aT; var aU; if (typeof aS === "string") { return aS } else { if ((aT = aS.token)) { aU = aH[aT.charAt(0)]; if (aU && aW.isSame(aV, aU)) { return au(aW, aT) } } } return false } var aM = {}; function t(aS) { if (aS in aM) { return aM[aS] } return (aM[aS] = ac(aS)) } function ac(aT) { var aV = []; var aS = /\[([^\]]*)\]|\(([^\)]*)\)|((\w)\4*o?T?)|([^\w\[\(]+)/g; var aU; while ((aU = aS.exec(aT))) { if (aU[1]) { aV.push(aU[1]) } else { if (aU[2]) { aV.push({ maybe: ac(aU[2]) }) } else { if (aU[3]) { aV.push({ token: aU[3] }) } else { if (aU[5]) { aV.push(aU[5]) } } } } } return aV } ak.month = ah; function ah(aU, aW) { var aT = this; aT.incrementDate = aS; aT.render = aV; z.call(aT, aU, aW, "month"); function aS(aX, aY) { return aX.clone().stripTime().add("months", aY).startOf("month") } function aV(aX) { aT.intervalStart = aX.clone().stripTime().startOf("month"); aT.intervalEnd = aT.intervalStart.clone().add("months", 1); aT.start = aT.intervalStart.clone().startOf("week"); aT.start = aT.skipHiddenDays(aT.start); aT.end = aT.intervalEnd.clone().add("days", (7 - aT.intervalEnd.weekday()) % 7); aT.end = aT.skipHiddenDays(aT.end, -1, true); var aY = Math.ceil(aT.end.diff(aT.start, "weeks", true)); if (aT.opt("weekMode") == "fixed") { aT.end.add("weeks", 6 - aY); aY = 6 } aT.title = aW.formatDate(aT.intervalStart, aT.opt("titleFormat")); aT.renderBasic(aY, aT.getCellsPerWeek(), true) } } ak.basicWeek = aK; function aK(aU, aW) { var aT = this; aT.incrementDate = aS; aT.render = aV; z.call(aT, aU, aW, "basicWeek"); function aS(aX, aY) { return aX.clone().stripTime().add("weeks", aY).startOf("week") } function aV(aX) { aT.intervalStart = aX.clone().stripTime().startOf("week"); aT.intervalEnd = aT.intervalStart.clone().add("weeks", 1); aT.start = aT.skipHiddenDays(aT.intervalStart); aT.end = aT.skipHiddenDays(aT.intervalEnd, -1, true); aT.title = aW.formatRange(aT.start, aT.end.clone().subtract(1), aT.opt("titleFormat"), " \u2014 "); aT.renderBasic(1, aT.getCellsPerWeek(), false) } } ak.basicDay = L; function L(aU, aW) { var aT = this; aT.incrementDate = aS; aT.render = aV; z.call(aT, aU, aW, "basicDay"); function aS(aY, aZ) { var aX = aY.clone().stripTime().add("days", aZ); aX = aT.skipHiddenDays(aX, aZ < 0 ? -1 : 1); return aX } function aV(aX) { aT.start = aT.intervalStart = aX.clone().stripTime(); aT.end = aT.intervalEnd = aT.start.clone().add("days", 1); aT.title = aW.formatDate(aT.start, aT.opt("titleFormat")); aT.renderBasic(1, 1, false) } } ao({ weekMode: "fixed" }); function z(bd, bE, a5) { var bD = this; bD.renderBasic = bx; bD.setHeight = bB; bD.setWidth = bL; bD.renderDayOverlay = bt; bD.defaultSelectionEnd = bs; bD.renderSelection = bF; bD.clearSelection = aS; bD.reportDayClick = bb; bD.dragStart = aX; bD.dragStop = a6; bD.getHoverListener = function () { return aY }; bD.colLeft = bR; bD.colRight = bg; bD.colContentLeft = bA; bD.colContentRight = by; bD.getIsCellAllDay = function () { return true }; bD.allDayRow = ba; bD.getRowCnt = function () { return bk }; bD.getColCnt = function () { return a0 }; bD.getColWidth = function () { return bp }; bD.getDaySegmentContainer = function () { return a9 }; aN.call(bD, bd, bE, a5); c.call(bD); aq.call(bD); ap.call(bD); var bi = bD.opt; var bu = bD.trigger; var bO = bD.renderOverlay; var a4 = bD.clearOverlays; var bz = bD.daySelectionMousedown; var aT = bD.cellToDate; var bH = bD.dateToCell; var bw = bD.rangeToSegments; var bC = bE.formatDate; var br = bE.calculateWeekNumber; var bj; var bc; var a7; var bn; var a3; var be; var bq; var bo; var aV; var a9; var bP; var bQ; var bp; var a8; var bk, a0; var bf; var bG; var aY; var bI; var bJ; var bS; var a1; var bh; aR(bd.addClass("fc-grid")); function bx(bT, bU, bV) { bk = bT; a0 = bU; bf = bV; bM(); if (!bn) { aW() } bm() } function bM() { bS = bi("theme") ? "ui" : "fc"; a1 = bi("columnFormat"); bh = bi("weekNumbers") } function aW() { a9 = aB("<div class='fc-event-container' style='position:absolute;z-index:8;top:0;left:0'/>").appendTo(bd) } function bm() { var bT = bv(); if (bj) { bj.remove() } bj = aB(bT).appendTo(bd); bc = bj.find("thead"); a7 = bc.find(".fc-day-header"); bn = bj.find("tbody"); a3 = bn.find("tr"); be = bn.find(".fc-day"); bq = a3.find("td:first-child"); bo = a3.eq(0).find(".fc-day > div"); aV = a3.eq(0).find(".fc-day-content > div"); h(bc.add(bc.find("tr"))); h(a3); a3.eq(0).addClass("fc-first"); a3.filter(":last").addClass("fc-last"); be.each(function (bV, bW) { var bU = aT(Math.floor(bV / a0), bV % a0); bu("dayRender", bD, bU, aB(bW)) }); aZ(be) } function bv() { var bT = "<table class='fc-border-separate' style='width:100%' cellspacing='0'>" + aU() + bl() + "</table>"; return bT } function aU() { var bW = bS + "-widget-header"; var bV = ""; var bU; var bT; bV += "<thead><tr>"; if (bh) { bV += "<th class='fc-week-number " + bW + "'>" + aO(bi("weekNumberTitle")) + "</th>" } for (bU = 0; bU < a0; bU++) { bT = aT(0, bU); bV += "<th class='fc-day-header fc-" + S[bT.day()] + " " + bW + "'>" + aO(bC(bT, a1)) + "</th>" } bV += "</tr></thead>"; return bV } function bl() { var bV = bS + "-widget-content"; var bW = ""; var bX; var bU; var bT; bW += "<tbody>"; for (bX = 0; bX < bk; bX++) { bW += "<tr class='fc-week'>"; if (bh) { bT = aT(bX, 0); bW += "<td class='fc-week-number " + bV + "'><div>" + aO(br(bT)) + "</div></td>" } for (bU = 0; bU < a0; bU++) { bT = aT(bX, bU); bW += a2(bT) } bW += "</tr>" } bW += "</tbody>"; return bW } function a2(bV) { var bX = bD.intervalStart.month(); var bT = bE.getNow().stripTime(); var bW = ""; var bU = bS + "-widget-content"; var bY = ["fc-day", "fc-" + S[bV.day()], bU]; if (bV.month() != bX) { bY.push("fc-other-month") } if (bV.isSame(bT, "day")) { bY.push("fc-today", bS + "-state-highlight") } else { if (bV < bT) { bY.push("fc-past") } else { bY.push("fc-future") } } bW += "<td class='" + bY.join(" ") + "' data-date='" + bV.format() + "'><div>"; if (bf) { bW += "<div class='fc-day-number'>" + bV.date() + "</div>" } bW += "<div class='fc-day-content'><div style='position:relative'>&nbsp;</div></div></div></td>"; return bW } function bB(bU) { bQ = bU; var bX = Math.max(bQ - bc.height(), 0); var bW; var bV; var bT; if (bi("weekMode") == "variable") { bW = bV = Math.floor(bX / (bk == 1 ? 2 : 6)) } else { bW = Math.floor(bX / bk); bV = bX - bW * (bk - 1) } bq.each(function (bY, bZ) { if (bY < bk) { bT = aB(bZ); bT.find("> div").css("min-height", (bY == bk - 1 ? bV : bW) - G(bT)) } }) } function bL(bT) { bP = bT; bI.clear(); bJ.clear(); a8 = 0; if (bh) { a8 = bc.find("th.fc-week-number").outerWidth() } bp = Math.floor((bP - a8) / a0); aC(a7.slice(0, -1), bp) } function aZ(bT) { bT.click(bN).mousedown(bz) } function bN(bU) { if (!bi("selectable")) { var bT = bE.moment(aB(this).data("date")); bu("dayClick", this, bT, bU) } } function bt(bX, bY, bT) { if (bT) { bG.build() } var bU = bw(bX, bY); for (var bV = 0; bV < bU.length; bV++) { var bW = bU[bV]; aZ(bK(bW.row, bW.leftCol, bW.row, bW.rightCol)) } } function bK(bW, bX, bU, bV) { var bT = bG.rect(bW, bX, bU, bV, bd); return bO(bT, bd) } function bs(bT) { return bT.clone().stripTime().add("days", 1) } function bF(bU, bT) { bt(bU, bT, true) } function aS() { a4() } function bb(bV, bW) { var bT = bH(bV); var bU = be[bT.row * a0 + bT.col]; bu("dayClick", bU, bV, bW) } function aX(bV, bT, bU) { aY.start(function (bW) { a4(); if (bW) { var bY = aT(bW); var bX = bY.clone().add(bE.defaultAllDayEventDuration); bt(bY, bX) } }, bT) } function a6(bW, bU, bV) { var bT = aY.stop(); a4(); if (bT) { bu("drop", bW, aT(bT), bU, bV) } } bG = new Q(function (bT, bW) { var bV, bX, bU; a7.each(function (bZ, bY) { bV = aB(bY); bX = bV.offset().left; if (bZ) { bU[1] = bX } bU = [bX]; bW[bZ] = bU }); bU[1] = bX + bV.outerWidth(); a3.each(function (bZ, bY) { if (bZ < bk) { bV = aB(bY); bX = bV.offset().top; if (bZ) { bU[1] = bX } bU = [bX]; bT[bZ] = bU } }); bU[1] = bX + bV.outerHeight() }); aY = new at(bG); bI = new l(function (bT) { return bo.eq(bT) }); bJ = new l(function (bT) { return aV.eq(bT) }); function bR(bT) { return bI.left(bT) } function bg(bT) { return bI.right(bT) } function bA(bT) { return bJ.left(bT) } function by(bT) { return bJ.right(bT) } function ba(bT) { return a3.eq(bT) } } function ap() { var aT = this; aT.renderEvents = aS; aT.clearEvents = aU; ad.call(aT); function aS(aW, aV) { aT.renderDayEvents(aW, aV) } function aU() { aT.getDaySegmentContainer().empty() } } ak.agendaWeek = i; function i(aU, aW) { var aT = this; aT.incrementDate = aS; aT.render = aV; I.call(aT, aU, aW, "agendaWeek"); function aS(aX, aY) { return aX.clone().stripTime().add("weeks", aY).startOf("week") } function aV(aX) { aT.intervalStart = aX.clone().stripTime().startOf("week"); aT.intervalEnd = aT.intervalStart.clone().add("weeks", 1); aT.start = aT.skipHiddenDays(aT.intervalStart); aT.end = aT.skipHiddenDays(aT.intervalEnd, -1, true); aT.title = aW.formatRange(aT.start, aT.end.clone().subtract(1), aT.opt("titleFormat"), " \u2014 "); aT.renderAgenda(aT.getCellsPerWeek()) } } ak.agendaDay = aF; function aF(aU, aW) { var aT = this; aT.incrementDate = aS; aT.render = aV; I.call(aT, aU, aW, "agendaDay"); function aS(aY, aZ) { var aX = aY.clone().stripTime().add("days", aZ); aX = aT.skipHiddenDays(aX, aZ < 0 ? -1 : 1); return aX } function aV(aX) { aT.start = aT.intervalStart = aX.clone().stripTime(); aT.end = aT.intervalEnd = aT.start.clone().add("days", 1); aT.title = aW.formatDate(aT.start, aT.opt("titleFormat")); aT.renderAgenda(1) } } ao({ allDaySlot: true, allDayText: "all-day", scrollTime: "06:00:00", slotDuration: "00:30:00", axisFormat: av, timeFormat: { agenda: n }, dragOpacity: { agenda: 0.5 }, minTime: "00:00:00", maxTime: "24:00:00", slotEventOverlap: true }); function av(aT, aS) { return aS.longDateFormat("LT").replace(":mm", "(:mm)").replace(/(\Wmm)$/, "($1)").replace(/\s*a$/i, "a") } function n(aT, aS) { return aS.longDateFormat("LT").replace(/\s*a$/i, "") } function I(cg, a7, bm) { var bj = this; bj.renderAgenda = a3; bj.setWidth = bv; bj.setHeight = bq; bj.afterRender = bY; bj.computeDateTop = bu; bj.getIsCellAllDay = bB; bj.allDayRow = function () { return b5 }; bj.getCoordinateGrid = function () { return bN }; bj.getHoverListener = function () { return cf }; bj.colLeft = ca; bj.colRight = bS; bj.colContentLeft = cj; bj.colContentRight = aZ; bj.getDaySegmentContainer = function () { return be }; bj.getSlotSegmentContainer = function () { return aX }; bj.getSlotContainer = function () { return ba }; bj.getRowCnt = function () { return 1 }; bj.getColCnt = function () { return bL }; bj.getColWidth = function () { return a0 }; bj.getSnapHeight = function () { return cc }; bj.getSnapDuration = function () { return bd }; bj.getSlotHeight = function () { return bM }; bj.getSlotDuration = function () { return bI }; bj.getMinTime = function () { return bZ }; bj.getMaxTime = function () { return bH }; bj.defaultSelectionEnd = bt; bj.renderDayOverlay = aV; bj.renderSelection = b8; bj.clearSelection = b3; bj.reportDayClick = bg; bj.dragStart = a1; bj.dragStop = ch; aN.call(bj, cg, a7, bm); c.call(bj); aq.call(bj); Y.call(bj); var bG = bj.opt; var bJ = bj.trigger; var by = bj.renderOverlay; var aU = bj.clearOverlays; var bz = bj.reportSelection; var b6 = bj.unselect; var bE = bj.daySelectionMousedown; var a9 = bj.slotSegHtml; var bh = bj.cellToDate; var a2 = bj.dateToCell; var bo = bj.rangeToSegments; var bf = a7.formatDate; var bA = a7.calculateWeekNumber; var bV; var cd; var b1; var b0; var bl; var aW; var aS; var bX; var bR; var ci; var be; var ce; var b5; var bw; var ba; var aX; var a4; var aY; var bC; var bP; var br; var a0; var bF; var bI; var bM; var bd; var a8; var cc; var bL; var bQ; var bN; var cf; var bK; var bD; var bn = {}; var bx; var aT; var bZ; var bH; var a6; aR(cg.addClass("fc-agenda")); function a3(ck) { bL = ck; bO(); if (!bV) { bk() } else { bU() } } function bO() { bx = bG("theme") ? "ui" : "fc"; aT = bG("isRTL"); a6 = bG("columnFormat"); bZ = A.duration(bG("minTime")); bH = A.duration(bG("maxTime")); bI = A.duration(bG("slotDuration")); bd = bG("snapDuration"); bd = bd ? A.duration(bd) : bI } function bk() { var cp; var co = bx + "-widget-header"; var cl = bx + "-widget-content"; var cq; var ck; var cn; var cm = bI.asMinutes() % 15 === 0; bU(); ci = aB("<div style='position:absolute;z-index:2;left:0;width:100%'/>").appendTo(cg); if (bG("allDaySlot")) { be = aB("<div class='fc-event-container' style='position:absolute;z-index:8;top:0;left:0'/>").appendTo(ci); cp = "<table style='width:100%' class='fc-agenda-allday' cellspacing='0'><tr><th class='" + co + " fc-agenda-axis'>" + (bG("allDayHTML") || aO(bG("allDayText"))) + "</th><td><div class='fc-day-content'><div style='position:relative'/></div></td><th class='" + co + " fc-agenda-gutter'>&nbsp;</th></tr></table>"; ce = aB(cp).appendTo(ci); b5 = ce.find("tr"); bs(b5.find("td")); ci.append("<div class='fc-agenda-divider " + co + "'><div class='fc-agenda-divider-inner'/></div>") } else { be = aB([]) } bw = aB("<div style='position:absolute;width:100%;overflow-x:hidden;overflow-y:auto'/>").appendTo(ci); ba = aB("<div style='position:relative;width:100%;overflow:hidden'/>").appendTo(bw); aX = aB("<div class='fc-event-container' style='position:absolute;z-index:8;top:0;left:0'/>").appendTo(ba); cp = "<table class='fc-agenda-slots' style='width:100%' cellspacing='0'><tbody>"; cq = A.duration(+bZ); bQ = 0; while (cq < bH) { ck = bj.start.clone().time(cq); cn = ck.minutes(); cp += "<tr class='fc-slot" + bQ + " " + (!cn ? "" : "fc-minor") + "'><th class='fc-agenda-axis " + co + "'>" + ((!cm || !cn) ? aO(bf(ck, bG("axisFormat"))) : "&nbsp;") + "</th><td class='" + cl + "'><div style='position:relative'>&nbsp;</div></td></tr>"; cq.add(bI); bQ++ } cp += "</tbody></table>"; a4 = aB(cp).appendTo(ba); b4(a4.find("td")) } function bU() { var ck = cb(); if (bV) { bV.remove() } bV = aB(ck).appendTo(cg); cd = bV.find("thead"); b1 = cd.find("th").slice(1, -1); b0 = bV.find("tbody"); bl = b0.find("td").slice(0, -1); aW = bl.find("> div"); aS = bl.find(".fc-day-content > div"); bX = bl.eq(0); bR = aW.eq(0); h(cd.add(cd.find("tr"))); h(b0.add(b0.find("tr"))) } function cb() { var ck = "<table style='width:100%' class='fc-agenda-days fc-border-separate' cellspacing='0'>" + b9() + b2() + "</table>"; return ck } function b9() { var cn = bx + "-widget-header"; var cl; var cm = ""; var co; var ck; cm += "<thead><tr>"; if (bG("weekNumbers")) { cl = bh(0, 0); co = bA(cl); if (aT) { co += bG("weekNumberTitle") } else { co = bG("weekNumberTitle") + co } cm += "<th class='fc-agenda-axis fc-week-number " + cn + "'>" + aO(co) + "</th>" } else { cm += "<th class='fc-agenda-axis " + cn + "'>&nbsp;</th>" } for (ck = 0; ck < bL; ck++) { cl = bh(0, ck); cm += "<th class='fc-" + S[cl.day()] + " fc-col" + ck + " " + cn + "'>" + aO(bf(cl, a6)) + "</th>" } cm += "<th class='fc-agenda-gutter " + cn + "'>&nbsp;</th></tr></thead>"; return cm } function b2() { var cm = bx + "-widget-header"; var cn = bx + "-widget-content"; var cp; var cr = a7.getNow().stripTime(); var co; var cs; var cl; var ck; var cq = ""; cq += "<tbody><tr><th class='fc-agenda-axis " + cm + "'>&nbsp;</th>"; cs = ""; for (co = 0; co < bL; co++) { cp = bh(0, co); ck = ["fc-col" + co, "fc-" + S[cp.day()], cn]; if (cp.isSame(cr, "day")) { ck.push(bx + "-state-highlight", "fc-today") } else { if (cp < cr) { ck.push("fc-past") } else { ck.push("fc-future") } } cl = "<td class='" + ck.join(" ") + "'><div><div class='fc-day-content'><div style='position:relative'>&nbsp;</div></div></div></td>"; cs += cl } cq += cs; cq += "<td class='fc-agenda-gutter " + cn + "'>&nbsp;</td></tr></tbody>"; return cq } function bq(ck) { if (ck === undefined) { ck = bP } bP = ck; bn = {}; var co = b0.position().top; var cn = bw.position().top; var cp = Math.min(ck - co, a4.height() + cn + 1); bR.height(cp - G(bX)); ci.css("top", co); bw.height(cp - cn - 1); var cm = a4.find("tr:first").height() + 1; var cl = a4.find("tr:eq(1)").height(); bM = (cm + cl) / 2; a8 = bI / bd; cc = bM / a8 } function bv(cn) { bC = cn; bK.clear(); bD.clear(); var ck = cd.find("th:first"); if (ce) { ck = ck.add(ce.find("th:first")) } ck = ck.add(a4.find("th:first")); br = 0; aC(ck.width("").each(function (co, cp) { br = Math.max(br, aB(cp).outerWidth()) }), br); var cl = bV.find(".fc-agenda-gutter"); if (ce) { cl = cl.add(ce.find("th.fc-agenda-gutter")) } var cm = bw[0].clientWidth; bF = bw.width() - cm; if (bF) { aC(cl, bF); cl.show().prev().removeClass("fc-last") } else { cl.hide().prev().addClass("fc-last") } a0 = Math.floor((cm - br) / bL); aC(b1.slice(0, -1), a0) } function bp() { var cl = bc(A.duration(bG("scrollTime"))) + 1; function ck() { bw.scrollTop(cl) } ck(); setTimeout(ck, 0) } function bY() { bp() } function bs(ck) { ck.click(bT).mousedown(bE) } function b4(ck) { ck.click(bT).mousedown(a5) } function bT(co) { if (!bG("selectable")) { var cn = Math.min(bL - 1, Math.floor((co.pageX - bV.offset().left - br) / a0)); var cm = bh(0, cn); var cl = this.parentNode.className.match(/fc-slot(\d+)/); if (cl) { var ck = parseInt(cl[1]); cm.add(bZ + ck * bI); cm = a7.rezoneDate(cm); bJ("dayClick", bl[cn], cm, co) } else { bJ("dayClick", bl[cn], cm, co) } } } function aV(co, cp, ck) { if (ck) { bN.build() } var cl = bo(co, cp); for (var cm = 0; cm < cl.length; cm++) { var cn = cl[cm]; bs(bb(cn.row, cn.leftCol, cn.row, cn.rightCol)) } } function bb(cn, co, cl, cm) { var ck = bN.rect(cn, co, cl, cm, ci); return by(ck, ci) } function bi(co, ct) { co = co.clone().stripZone(); ct = ct.clone().stripZone(); for (var cm = 0; cm < bL; cm++) { var cp = bh(0, cm); var cl = cp.clone().add("days", 1); var cn = cp < co ? co : cp; var cs = cl < ct ? cl : ct; if (cn < cs) { var cr = bN.rect(0, cm, 0, cm, ba); var cq = bu(cn, cp); var ck = bu(cs, cp); cr.top = cq; cr.height = ck - cq; b4(by(cr, ba)) } } } bN = new Q(function (cs, cq) { var co, cl, ck; b1.each(function (cv, cu) { co = aB(cu); cl = co.offset().left; if (cv) { ck[1] = cl } ck = [cl]; cq[cv] = ck }); ck[1] = cl + co.outerWidth(); if (bG("allDaySlot")) { co = b5; cl = co.offset().top; cs[0] = [cl, cl + co.outerHeight()] } var cr = ba.offset().top; var ct = bw.offset().top; var cn = ct + bw.outerHeight(); function cp(cu) { return Math.max(ct, Math.min(cn, cu)) } for (var cm = 0; cm < bQ * a8; cm++) { cs.push([cp(cr + cc * cm), cp(cr + cc * (cm + 1))]) } }); cf = new at(bN); bK = new l(function (ck) { return aW.eq(ck) }); bD = new l(function (ck) { return aS.eq(ck) }); function ca(ck) { return bK.left(ck) } function cj(ck) { return bD.left(ck) } function bS(ck) { return bK.right(ck) } function aZ(ck) { return bD.right(ck) } function bB(ck) { return bG("allDaySlot") && !ck.row } function bW(ck) { var cm = bh(0, ck.col); var cl = ck.row; if (bG("allDaySlot")) { cl-- } if (cl >= 0) { cm.time(A.duration(bZ + cl * bI)); cm = a7.rezoneDate(cm) } return cm } function bu(ck, cl) { return bc(A.duration(ck.clone().stripZone() - cl.clone().stripTime())) } function bc(cp) { if (cp < bZ) { return 0 } if (cp >= bH) { return a4.height() } var cn = (cp - bZ) / bI; var cl = Math.floor(cn); var ck = cn - cl; var cm = bn[cl]; if (cm === undefined) { cm = bn[cl] = a4.find("tr").eq(cl).find("td div")[0].offsetTop } var co = cm - 1 + ck * bM; co = Math.max(co, 0); return co } function bt(ck) { if (ck.hasTime()) { return ck.clone().add(bI) } else { return ck.clone().add("days", 1) } } function b8(cl, ck) { if (cl.hasTime() || ck.hasTime()) { b7(cl, ck) } else { if (bG("allDaySlot")) { aV(cl, ck, true) } } } function b7(ck, cq) { var co = bG("selectHelper"); bN.build(); if (co) { var cm = a2(ck).col; if (cm >= 0 && cm < bL) { var cn = bN.rect(0, cm, 0, cm, ba); var cp = bu(ck, ck); var cl = bu(cq, ck); if (cl > cp) { cn.top = cp; cn.height = cl - cp; cn.left += 2; cn.width -= 5; if (aB.isFunction(co)) { var cr = co(ck, cq); if (cr) { cn.position = "absolute"; aY = aB(cr).css(cn).appendTo(ba) } } else { cn.isStart = true; cn.isEnd = true; aY = aB(a9({ title: "", start: ck, end: cq, className: ["fc-select-helper"], editable: false }, cn)); aY.css("opacity", bG("dragOpacity")) } if (aY) { b4(aY); ba.append(aY); aC(aY, cn.width, true); ae(aY, cn.height, true) } } } } else { bi(ck, cq) } } function b3() { aU(); if (aY) { aY.remove(); aY = null } } function a5(ck) { if (ck.which == 1 && bG("selectable")) { b6(ck); var cl; cf.start(function (cn, cm) { b3(); if (cn && cn.col == cm.col && !bB(cn)) { var cp = bW(cm); var co = bW(cn); cl = [cp, cp.clone().add(bd), co, co.clone().add(bd)].sort(a); b7(cl[0], cl[3]) } else { cl = null } }, ck); aB(document).one("mouseup", function (cm) { cf.stop(); if (cl) { if (+cl[0] == +cl[1]) { bg(cl[0], cm) } bz(cl[0], cl[3], cm) } }) } } function bg(ck, cl) { bJ("dayClick", bl[a2(ck).col], ck, cl) } function a1(cm, ck, cl) { cf.start(function (cn) { aU(); if (cn) { var cp = bW(cn); var co = cp.clone(); if (cp.hasTime()) { co.add(a7.defaultTimedEventDuration); bi(cp, co) } else { co.add(a7.defaultAllDayEventDuration); aV(cp, co) } } }, ck) } function ch(cn, cl, cm) { var ck = cf.stop(); aU(); if (ck) { bJ("drop", cn, bW(ck), cl, cm) } } } function Y() { var bt = this; bt.renderEvents = aY; bt.clearEvents = bc; bt.slotSegHtml = be; ad.call(bt); var a7 = bt.opt; var bf = bt.trigger; var aV = bt.isEventDraggable; var bz = bt.isEventResizable; var bj = bt.eventElementHandlers; var bo = bt.setHeight; var aX = bt.getDaySegmentContainer; var bA = bt.getSlotSegmentContainer; var aU = bt.getHoverListener; var aW = bt.computeDateTop; var bl = bt.getIsCellAllDay; var bn = bt.colContentLeft; var bk = bt.colContentRight; var aT = bt.cellToDate; var bp = bt.getColCnt; var a8 = bt.getColWidth; var br = bt.getSnapHeight; var bd = bt.getSnapDuration; var aS = bt.getSlotHeight; var a3 = bt.getSlotDuration; var a4 = bt.getSlotContainer; var a5 = bt.reportEventElement; var aZ = bt.showEvents; var a6 = bt.hideEvents; var bx = bt.eventDrop; var a9 = bt.eventResize; var bg = bt.renderDayOverlay; var a0 = bt.clearOverlays; var bB = bt.renderDayEvents; var bb = bt.getMinTime; var bh = bt.getMaxTime; var bv = bt.calendar; var bq = bv.formatDate; var bs = bv.formatRange; var bu = bv.getEventEnd; bt.draggableDayEvent = a2; function aY(bG, bE) { var bF, bD = bG.length, bH = [], bC = []; for (bF = 0; bF < bD; bF++) { if (bG[bF].allDay) { bH.push(bG[bF]) } else { bC.push(bG[bF]) } } if (a7("allDaySlot")) { bB(bH, bE); bo() } a1(ba(bC), bE) } function bc() { aX().empty(); bA().empty() } function ba(bL) { var bJ = bp(), bG = bb(), bC = bh(), bE, bI, bF, bH, bK, bD = []; for (bI = 0; bI < bJ; bI++) { bE = aT(0, bI); bK = bm(bL, bE.clone().time(bG), bE.clone().time(bC)); bK = an(bK); for (bF = 0; bF < bK.length; bF++) { bH = bK[bF]; bH.col = bI; bD.push(bH) } } return bD } function bm(bN, bM, bD) { bM = bM.clone().stripZone(); bD = bD.clone().stripZone(); var bF = [], bH, bJ = bN.length, bE, bK, bI, bL, bO, bC, bG; for (bH = 0; bH < bJ; bH++) { bE = bN[bH]; bK = bE.start.clone().stripZone(); bI = bu(bE).stripZone(); if (bI > bM && bK < bD) { if (bK < bM) { bL = bM.clone(); bC = false } else { bL = bK; bC = true } if (bI > bD) { bO = bD.clone(); bG = false } else { bO = bI; bG = true } bF.push({ event: bE, start: bL, end: bO, isStart: bC, isEnd: bG }) } } return bF.sort(u) } function a1(bN, bO) { var bS, bV = bN.length, bU, bQ, bK, bG, bH, bJ, bE, bP, bC, bW, bI = "", bX, bT, bF, bM, bL, bR = bA(), bD = a7("isRTL"); for (bS = 0; bS < bV; bS++) { bU = bN[bS]; bQ = bU.event; bK = aW(bU.start, bU.start); bG = aW(bU.end, bU.start); bH = bn(bU.col); bJ = bk(bU.col); bE = bJ - bH; bJ -= bE * 0.025; bE = bJ - bH; bP = bE * (bU.forwardCoord - bU.backwardCoord); if (a7("slotEventOverlap")) { bP = Math.max((bP - (20 / 2)) * 2, bP) } if (bD) { bW = bJ - bU.backwardCoord * bE; bC = bW - bP } else { bC = bH + bU.backwardCoord * bE; bW = bC + bP } bC = Math.max(bC, bH); bW = Math.min(bW, bJ); bP = bW - bC; bU.top = bK; bU.left = bC; bU.outerWidth = bP; bU.outerHeight = bG - bK; bI += be(bQ, bU) } bR[0].innerHTML = bI; bX = bR.children(); for (bS = 0; bS < bV; bS++) { bU = bN[bS]; bQ = bU.event; bT = aB(bX[bS]); bF = bf("eventRender", bQ, bQ, bT); if (bF === false) { bT.remove() } else { if (bF && bF !== true) { bT.remove(); bT = aB(bF).css({ position: "absolute", top: bU.top, left: bU.left }).appendTo(bR) } bU.element = bT; if (bQ._id === bO) { bw(bQ, bT, bU) } else { bT[0]._fci = bS } a5(bQ, bT) } } s(bR, bN, bw); for (bS = 0; bS < bV; bS++) { bU = bN[bS]; if ((bT = bU.element)) { bU.vsides = G(bT, true); bU.hsides = j(bT, true); bM = bT.find(".fc-event-title"); if (bM.length) { bU.contentTop = bM[0].offsetTop } } } for (bS = 0; bS < bV; bS++) { bU = bN[bS]; if ((bT = bU.element)) { bT[0].style.width = Math.max(0, bU.outerWidth - bU.hsides) + "px"; bL = Math.max(0, bU.outerHeight - bU.vsides); bT[0].style.height = bL + "px"; bQ = bU.event; if (bU.contentTop !== undefined && bL - bU.contentTop < 10) { bT.find("div.fc-event-time").text(bq(bQ.start, a7("timeFormat")) + " - " + bQ.title); bT.find("div.fc-event-title").remove() } bf("eventAfterRender", bQ, bQ, bT) } } } function be(bH, bC) { var bG = "<"; var bE = bH.url; var bD = T(bH, a7); var bF = ["fc-event", "fc-event-vert"]; if (aV(bH)) { bF.push("fc-event-draggable") } if (bC.isStart) { bF.push("fc-event-start") } if (bC.isEnd) { bF.push("fc-event-end") } bF = bF.concat(bH.className); if (bH.source) { bF = bF.concat(bH.source.className || []) } if (bE) { bG += "a href='" + aO(bH.url) + "'" } else { bG += "div" } bG += " class='" + bF.join(" ") + "' style='position:absolute;top:" + bC.top + "px;left:" + bC.left + "px;" + bD + "'><div class='fc-event-inner'><div class='fc-event-time'>"; if (bH.end) { bG += aO(bs(bH.start, bH.end, a7("timeFormat"))) } else { bG += aO(bq(bH.start, a7("timeFormat"))) } bG += "</div><div class='fc-event-title'>" + aO(bH.title || "") + "</div></div><div class='fc-event-bg'></div>"; if (bC.isEnd && bz(bH)) { bG += "<div class='ui-resizable-handle ui-resizable-s'>=</div>" } bG += "</" + (bE ? "a" : "div") + ">"; return bG } function bw(bE, bD, bC) { var bF = bD.find("div.fc-event-time"); if (aV(bE)) { bi(bE, bD, bF) } if (bC.isEnd && bz(bE)) { by(bE, bD, bF) } bj(bE, bD) } function a2(bD, bO, bK) { var bC = bK.isStart; var bP; var bN; var bR = true; var bI; var bH = aU(); var bL = a8(); var bJ = bb(); var bG = a3(); var bQ = aS(); var bF = bd(); var bE = br(); bO.draggable({ opacity: a7("dragOpacity", "month"), revertDuration: a7("dragRevertDuration"), start: function (bS, bT) { bf("eventDragStart", bO, bD, bS, bT); a6(bD, bO); bP = bO.width(); bH.start(function (bV, bU) { a0(); if (bV) { bN = false; var bX = aT(0, bU.col); var bW = aT(0, bV.col); bI = bW.diff(bX, "days"); if (!bV.row) { bg(bD.start.clone().add("days", bI), bu(bD).add("days", bI)); bM() } else { if (bC) { if (bR) { bO.width(bL - 10); ae(bO, bv.defaultTimedEventDuration / bG * bQ); bO.draggable("option", "grid", [bL, 1]); bR = false } } else { bN = true } } bN = bN || (bR && !bI) } else { bM(); bN = true } bO.draggable("option", "revert", bN) }, bS, "drag") }, stop: function (bU, bV) { bH.stop(); a0(); bf("eventDragStop", bO, bD, bU, bV); if (bN) { bM(); bO.css("filter", ""); aZ(bD, bO) } else { var bS = bD.start.clone().add("days", bI); var bT; var bW; if (!bR) { bW = Math.round((bO.offset().top - a4().offset().top) / bE); bT = A.duration(bJ + bW * bF); bS = bv.rezoneDate(bS.clone().time(bT)) } bx(this, bD, bS, bU, bV) } } }); function bM() { if (!bR) { bO.width(bP).height("").draggable("option", "grid", null); bR = true } } } function bi(bQ, bS, bG) { var bL = bt.getCoordinateGrid(); var bO = bp(); var bY = a8(); var bP = br(); var bK = bd(); var bX; var bU; var bW, bN; var bC, bH; var bF, bJ; var bI; var bV, bE; var bD, bR; bS.draggable({ scroll: false, grid: [bY, bP], axis: bO == 1 ? "y" : false, opacity: a7("dragOpacity"), revertDuration: a7("dragRevertDuration"), start: function (bZ, b0) { bf("eventDragStart", bS, bQ, bZ, b0); a6(bQ, bS); bL.build(); bX = bS.position(); bU = bL.cell(bZ.pageX, bZ.pageY); bW = bN = true; bC = bH = bl(bU); bF = bJ = 0; bI = 0; bV = bE = 0; bD = null; bR = null }, drag: function (b3, b4) { var bZ = bL.cell(b3.pageX, b3.pageY); bW = !!bZ; if (bW) { bC = bl(bZ); bF = Math.round((b4.position.left - bX.left) / bY); if (bF != bJ) { var b2 = aT(0, bU.col); var b1 = bU.col + bF; b1 = Math.max(0, b1); b1 = Math.min(bO - 1, b1); var b0 = aT(0, b1); bI = b0.diff(b2, "days") } if (!bC) { bV = Math.round((b4.position.top - bX.top) / bP) } } if (bW != bN || bC != bH || bF != bJ || bV != bE) { if (bC) { bD = bQ.start.clone().stripTime().add("days", bI); bR = bD.clone().add(bv.defaultAllDayEventDuration) } else { bD = bQ.start.clone().add(bV * bK).add("days", bI); bR = bu(bQ).add(bV * bK).add("days", bI) } bT(); bN = bW; bH = bC; bJ = bF; bE = bV } bS.draggable("option", "revert", !bW) }, stop: function (bZ, b0) { a0(); bf("eventDragStop", bS, bQ, bZ, b0); if (bW && (bC || bI || bV)) { bx(this, bQ, bD, bZ, b0) } else { bW = true; bC = false; bF = 0; bI = 0; bV = 0; bT(); bS.css("filter", ""); bS.css(bX); aZ(bQ, bS) } } }); function bT() { a0(); if (bW) { if (bC) { bG.hide(); bS.draggable("option", "grid", null); bg(bD, bR) } else { bM(); bG.css("display", ""); bS.draggable("option", "grid", [bY, bP]) } } } function bM() { var bZ; if (bD) { if (bQ.end) { bZ = bs(bD, bR, a7("timeFormat")) } else { bZ = bq(bD, a7("timeFormat")) } bG.text(bZ) } } } function by(bH, bF, bI) { var bG, bD; var bJ = br(); var bE = bd(); var bC; bF.resizable({ handles: { s: ".ui-resizable-handle" }, grid: bJ, start: function (bK, bL) { bG = bD = 0; a6(bH, bF); bf("eventResizeStart", this, bH, bK, bL) }, resize: function (bK, bL) { bG = Math.round((Math.max(bJ, bF.height()) - bL.originalSize.height) / bJ); if (bG != bD) { bC = bu(bH).add(bE * bG); var bM; if (bG || bH.end) { bM = bs(bH.start, bC, a7("timeFormat")) } else { bM = bq(bH.start, a7("timeFormat")) } bI.text(bM); bD = bG } }, stop: function (bK, bL) { bf("eventResizeStop", this, bH, bK, bL); if (bG) { a9(this, bH, bC, bK, bL) } else { aZ(bH, bF) } } }) } } function an(aS) { var aU = E(aS); var aV = aU[0]; var aT; aa(aU); if (aV) { for (aT = 0; aT < aV.length; aT++) { af(aV[aT]) } for (aT = 0; aT < aV.length; aT++) { M(aV[aT], 0, 0) } } return B(aU) } function E(aT) { var aW = []; var aV, aS; var aU; for (aV = 0; aV < aT.length; aV++) { aS = aT[aV]; for (aU = 0; aU < aW.length; aU++) { if (!aQ(aS, aW[aU]).length) { break } } (aW[aU] || (aW[aU] = [])).push(aS) } return aW } function aa(aW) { var aV, aX; var aU, aS; var aT; for (aV = 0; aV < aW.length; aV++) { aX = aW[aV]; for (aU = 0; aU < aX.length; aU++) { aS = aX[aU]; aS.forwardSegs = []; for (aT = aV + 1; aT < aW.length; aT++) { aQ(aS, aW[aT], aS.forwardSegs) } } } } function af(aT) { var aS = aT.forwardSegs; var aW = 0; var aV, aU; if (aT.forwardPressure === undefined) { for (aV = 0; aV < aS.length; aV++) { aU = aS[aV]; af(aU); aW = Math.max(aW, 1 + aU.forwardPressure) } aT.forwardPressure = aW } } function M(aT, aV, aW) { var aS = aT.forwardSegs; var aU; if (aT.forwardCoord === undefined) { if (!aS.length) { aT.forwardCoord = 1 } else { aS.sort(aG); M(aS[0], aV + 1, aW); aT.forwardCoord = aS[0].backwardCoord } aT.backwardCoord = aT.forwardCoord - (aT.forwardCoord - aW) / (aV + 1); for (aU = 0; aU < aS.length; aU++) { M(aS[aU], 0, aT.forwardCoord) } } } function B(aV) { var aS = []; var aU, aW; var aT; for (aU = 0; aU < aV.length; aU++) { aW = aV[aU]; for (aT = 0; aT < aW.length; aT++) { aS.push(aW[aT]) } } return aS } function aQ(aS, aV, aU) { aU = aU || []; for (var aT = 0; aT < aV.length; aT++) { if (g(aS, aV[aT])) { aU.push(aV[aT]) } } return aU } function g(aT, aS) { return aT.end > aS.start && aT.start < aS.end } function aG(aT, aS) { return aS.forwardPressure - aT.forwardPressure || (aT.backwardCoord || 0) - (aS.backwardCoord || 0) || u(aT, aS) } function u(aT, aS) { return aT.start - aS.start || (aS.end - aS.start) - (aT.end - aT.start) || (aT.event.title || "").localeCompare(aS.event.title) } function aN(a6, bn, a4) { var bm = this; bm.element = a6; bm.calendar = bn; bm.name = a4; bm.opt = ba; bm.trigger = bh; bm.isEventDraggable = aX; bm.isEventResizable = bs; bm.clearEventData = aW; bm.reportEventElement = a8; bm.triggerEventDestroy = bf; bm.eventElementHandlers = bi; bm.showEvents = aZ; bm.hideEvents = a9; bm.eventDrop = bq; bm.eventResize = bc; var br = bn.reportEventChange; var a3 = {}; var bt = []; var be = bn.options; var bp = A.duration(be.nextDayThreshold); function ba(by, bw) { var bx = be[by]; if (aB.isPlainObject(bx) && !V(by)) { return F(bx, bw || a4) } return bx } function bh(bw, bx) { return bn.trigger.apply(bn, [bw, bx || bm].concat(Array.prototype.slice.call(arguments, 2), [bm])) } function aX(bw) { var bx = bw.source || {}; return aP(bw.startEditable, bx.startEditable, ba("eventStartEditable"), bw.editable, bx.editable, ba("editable")) } function bs(bw) { var bx = bw.source || {}; return aP(bw.durationEditable, bx.durationEditable, ba("eventDurationEditable"), bw.editable, bx.editable, ba("editable")) } function aW() { a3 = {}; bt = [] } function a8(bx, bw) { bt.push({ event: bx, element: bw }); if (a3[bx._id]) { a3[bx._id].push(bw) } else { a3[bx._id] = [bw] } } function bf() { aB.each(bt, function (bw, bx) { bm.trigger("eventDestroy", bx.event, bx.event, bx.element) }) } function bi(bx, bw) { bw.click(function (by) { if (!bw.hasClass("ui-draggable-dragging") && !bw.hasClass("ui-resizable-resizing")) { return bh("eventClick", this, bx, by) } }).hover(function (by) { bh("eventMouseover", this, bx, by) }, function (by) { bh("eventMouseout", this, bx, by) }) } function aZ(bx, bw) { a7(bx, bw, "show") } function a9(bx, bw) { a7(bx, bw, "hide") } function a7(bz, by, bB) { var bA = a3[bz._id], bx, bw = bA.length; for (bx = 0; bx < bw; bx++) { if (!by || bA[bx][0] != by[0]) { bA[bx][bB]() } } } function bq(bx, bz, bw, by, bA) { var bB = bn.mutateEvent(bz, bw, null); bh("eventDrop", bx, bz, function () { bB(); br(bz._id) }, by, bA); br(bz._id) } function bc(bw, bz, by, bx, bA) { var bB = bn.mutateEvent(bz, null, by); bh("eventResize", bw, bz, function () { bB(); br(bz._id) }, bx, bA); br(bz._id) } bm.isHiddenDay = a1; bm.skipHiddenDays = aY; bm.getCellsPerWeek = bk; bm.dateToCell = bo; bm.dateToDayOffset = bd; bm.dayOffsetToCellOffset = aU; bm.cellOffsetToCell = a5; bm.cellToDate = aV; bm.cellToCellOffset = aS; bm.cellOffsetToDayOffset = bg; bm.dayOffsetToDate = bv; bm.rangeToSegments = bj; var bb = ba("hiddenDays") || []; var aT = []; var bu; var a0 = []; var a2 = []; var bl = ba("isRTL"); (function () { if (ba("weekends") === false) { bb.push(0, 6) } for (var bx = 0, bw = 0; bx < 7; bx++) { a0[bx] = bw; aT[bx] = aB.inArray(bx, bb) != -1; if (!aT[bx]) { a2[bw] = bx; bw++ } } bu = bw; if (!bu) { throw "invalid hiddenDays" } })(); function a1(bw) { if (A.isMoment(bw)) { bw = bw.day() } return aT[bw] } function bk() { return bu } function aY(by, bz, bw) { var bx = by.clone(); bz = bz || 1; while (aT[(bx.day() + (bw ? bz : 0) + 7) % 7]) { bx.add("days", bz) } return bx } function aV() { var by = aS.apply(null, arguments); var bw = bg(by); var bx = bv(bw); return bx } function aS(bB, bz) { var by = bm.getColCnt(); var bx = bl ? -1 : 1; var bw = bl ? by - 1 : 0; if (typeof bB == "object") { bz = bB.col; bB = bB.row } var bA = bB * by + (bz * bx + bw); return bA } function bg(bx) { var bw = bm.start.day(); bx += a0[bw]; return Math.floor(bx / bu) * 7 + a2[(bx % bu + bu) % bu] - bw } function bv(bw) { return bm.start.clone().add("days", bw) } function bo(by) { var bx = bd(by); var bz = aU(bx); var bw = a5(bz); return bw } function bd(bw) { return bw.clone().stripTime().diff(bm.start, "days") } function aU(bx) { var bw = bm.start.day(); bx += bw; return Math.floor(bx / 7) * bu + a0[(bx % 7 + 7) % 7] - a0[bw] } function a5(bB) { var bz = bm.getColCnt(); var bx = bl ? -1 : 1; var bw = bl ? bz - 1 : 0; var bA = Math.floor(bB / bz); var by = ((bB % bz + bz) % bz) * bx + bw; return { row: bA, col: by } } function bj(bA, by) { var bB = bm.getRowCnt(); var bM = bm.getColCnt(); var bN = []; var bP = bd(bA); var bL = bd(by); var bI = +by.time(); if (bI && bI >= bp) { bL++ } bL = Math.max(bL, bP + 1); var bO = aU(bP); var bC = aU(bL) - 1; for (var bD = 0; bD < bB; bD++) { var bx = bD * bM; var bH = bx + bM - 1; var bJ = Math.max(bO, bx); var bz = Math.min(bC, bH); if (bJ <= bz) { var bw = a5(bJ); var bK = a5(bz); var bG = [bw.col, bK.col].sort(); var bE = bg(bJ) == bP; var bF = bg(bz) + 1 == bL; bN.push({ row: bD, leftCol: bG[0], rightCol: bG[1], isStart: bE, isEnd: bF }) } } return bN } } function ad() { var by = this; by.renderDayEvents = bF; by.draggableDayEvent = a8; by.resizableDayEvent = br; var bd = by.opt; var bo = by.trigger; var a0 = by.isEventDraggable; var bC = by.isEventResizable; var bb = by.reportEventElement; var bq = by.eventElementHandlers; var a3 = by.showEvents; var bc = by.hideEvents; var bB = by.eventDrop; var bf = by.eventResize; var bG = by.getRowCnt; var bw = by.getColCnt; var a6 = by.allDayRow; var bE = by.colLeft; var a9 = by.colRight; var bv = by.colContentLeft; var bt = by.colContentRight; var a1 = by.getDaySegmentContainer; var bp = by.renderDayOverlay; var a4 = by.clearOverlays; var aU = by.clearSelection; var aZ = by.getHoverListener; var bs = by.rangeToSegments; var aX = by.cellToDate; var aT = by.cellToCellOffset; var bm = by.cellOffsetToDayOffset; var bh = by.dateToDayOffset; var aW = by.dayOffsetToCellOffset; var bA = by.calendar; var bz = bA.getEventEnd; var bx = bA.formatDate; function bF(bJ, bI) { var bH = a7(bJ, false, true); ai(bH, function (bL, bK) { bb(bL.event, bK) }); a5(bH, bI); ai(bH, function (bL, bK) { bo("eventAfterRender", bL.event, bL.event, bK) }) } function bi(bI, bL, bK) { var bH = a7([bI], true, false); var bJ = []; ai(bH, function (bN, bM) { if (bN.row === bL) { bM.css("top", bK) } bJ.push(bM[0]) }); return bJ } function a7(bK, bO, bM) { var bL = a1(); var bJ = bO ? aB("<div/>") : bL; var bH = ba(bK); var bI; var bN; bD(bH); bI = bg(bH); bJ[0].innerHTML = bI; bN = bJ.children(); if (bO) { bL.append(bN) } a2(bH, bN); ai(bH, function (bQ, bP) { bQ.hsides = j(bP, true) }); ai(bH, function (bQ, bP) { bP.width(Math.max(0, bQ.outerWidth - bQ.hsides)) }); ai(bH, function (bQ, bP) { bQ.outerHeight = bP.outerHeight(true) }); aY(bH, bM); return bH } function ba(bJ) { var bH = []; for (var bI = 0; bI < bJ.length; bI++) { var bK = bn(bJ[bI]); bH.push.apply(bH, bK) } return bH } function bn(bJ) { var bH = bs(bJ.start, bz(bJ)); for (var bI = 0; bI < bH.length; bI++) { bH[bI].event = bJ } return bH } function bD(bI) { var bL = bd("isRTL"); for (var bK = 0; bK < bI.length; bK++) { var bM = bI[bK]; var bN = (bL ? bM.isEnd : bM.isStart) ? bv : bE; var bH = (bL ? bM.isStart : bM.isEnd) ? bt : a9; var bO = bN(bM.leftCol); var bJ = bH(bM.rightCol); bM.left = bO; bM.outerWidth = bJ - bO } } function bg(bH) { var bJ = ""; for (var bI = 0; bI < bH.length; bI++) { bJ += be(bH[bI]) } return bJ } function be(bM) { var bK = ""; var bJ = bd("isRTL"); var bL = bM.event; var bI = bL.url; var bN = ["fc-event", "fc-event-hori"]; if (a0(bL)) { bN.push("fc-event-draggable") } if (bM.isStart) { bN.push("fc-event-start") } if (bM.isEnd) { bN.push("fc-event-end") } bN = bN.concat(bL.className); if (bL.source) { bN = bN.concat(bL.source.className || []) } var bH = T(bL, bd); if (bI) { bK += "<a href='" + aO(bI) + "'" } else { bK += "<div" } bK += " class='" + bN.join(" ") + "' style='position:absolute;left:" + bM.left + "px;" + bH + "'><div class='fc-event-inner'>"; if (!bL.allDay && bM.isStart) { bK += "<span class='fc-event-time'>" + aO(bx(bL.start, bd("timeFormat"))) + "</span>" } bK += "<span class='fc-event-title'>" + aO(bL.title || "") + "</span></div>"; if (bL.allDay && bM.isEnd && bC(bL)) { bK += "<div class='ui-resizable-handle ui-resizable-" + (bJ ? "w" : "e") + "'>&nbsp;&nbsp;&nbsp;</div>" } bK += "</" + (bI ? "a" : "div") + ">"; return bK } function a2(bI, bN) { for (var bK = 0; bK < bI.length; bK++) { var bM = bI[bK]; var bL = bM.event; var bJ = bN.eq(bK); var bH = bo("eventRender", bL, bL, bJ); if (bH === false) { bJ.remove() } else { if (bH && bH !== true) { bH = aB(bH).css({ position: "absolute", left: bM.left }); bJ.replaceWith(bH); bJ = bH } bM.element = bJ } } } function aY(bJ, bL) { var bM = aS(bJ); var bH = bu(); var bI = []; var bK; if (bL) { for (bK = 0; bK < bH.length; bK++) { bH[bK].height(bM[bK]) } } for (bK = 0; bK < bH.length; bK++) { bI.push(bH[bK].position().top) } ai(bJ, function (bO, bN) { bN.css("top", bI[bO.row] + bO.top) }) } function aS(bJ) { var bL = bG(); var bQ = bw(); var bR = []; var bH = bl(bJ); var bM; for (var bP = 0; bP < bL; bP++) { var bO = bH[bP]; var bN = []; for (bM = 0; bM < bQ; bM++) { bN.push(0) } for (var bI = 0; bI < bO.length; bI++) { var bK = bO[bI]; bK.top = ay(bN.slice(bK.leftCol, bK.rightCol + 1)); for (bM = bK.leftCol; bM <= bK.rightCol; bM++) { bN[bM] = bK.top + bK.outerHeight } } bR.push(ay(bN)) } return bR } function bl(bI) { var bM = bG(); var bL = []; var bH; var bK; var bJ; for (bH = 0; bH < bI.length; bH++) { bK = bI[bH]; bJ = bK.row; if (bK.element) { if (bL[bJ]) { bL[bJ].push(bK) } else { bL[bJ] = [bK] } } } for (bJ = 0; bJ < bM; bJ++) { bL[bJ] = aV(bL[bJ] || []) } return bL } function aV(bI) { var bK = []; var bH = bk(bI); for (var bJ = 0; bJ < bH.length; bJ++) { bK.push.apply(bK, bH[bJ]) } return bK } function bk(bJ) { bJ.sort(aD); var bI = []; for (var bK = 0; bK < bJ.length; bK++) { var bL = bJ[bK]; for (var bH = 0; bH < bI.length; bH++) { if (!b(bL, bI[bH])) { break } } if (bI[bH]) { bI[bH].push(bL) } else { bI[bH] = [bL] } } return bI } function bu() { var bH; var bJ = bG(); var bI = []; for (bH = 0; bH < bJ; bH++) { bI[bH] = a6(bH).find("div.fc-day-content > div") } return bI } function a5(bI, bH) { var bJ = a1(); ai(bI, function (bN, bL, bK) { var bM = bN.event; if (bM._id === bH) { bj(bM, bL, bN) } else { bL[0]._fci = bK } }); s(bJ, bI, bj) } function bj(bJ, bH, bI) { if (a0(bJ)) { by.draggableDayEvent(bJ, bH, bI) } if (bJ.allDay && bI.isEnd && bC(bJ)) { by.resizableDayEvent(bJ, bH, bI) } bq(bJ, bH) } function a8(bL, bK) { var bJ = aZ(); var bI; var bH; bK.draggable({ delay: 50, opacity: bd("dragOpacity"), revertDuration: bd("dragRevertDuration"), start: function (bM, bN) { bo("eventDragStart", bK, bL, bM, bN); bc(bL, bK); bJ.start(function (bP, bO, bR, bT) { bK.draggable("option", "revert", !bP || !bR && !bT); a4(); if (bP) { var bQ = aX(bO); var bS = aX(bP); bI = bS.diff(bQ, "days"); bH = bL.start.clone().add("days", bI); bp(bH, bz(bL).add("days", bI)) } else { bI = 0 } }, bM, "drag") }, stop: function (bM, bN) { bJ.stop(); a4(); bo("eventDragStop", bK, bL, bM, bN); if (bI) { bB(this, bL, bH, bM, bN) } else { bK.css("filter", ""); a3(bL, bK) } } }) } function br(bK, bI, bJ) { var bH = bd("isRTL"); var bM = bH ? "w" : "e"; var bL = bI.find(".ui-resizable-" + bM); var bN = false; aR(bI); bI.mousedown(function (bO) { bO.preventDefault() }).click(function (bO) { if (bN) { bO.preventDefault(); bO.stopImmediatePropagation() } }); bL.mousedown(function (bW) { if (bW.which != 1) { return } bN = true; var bQ = aZ(); var bP = bI.css("top"); var bS; var bV; var bO; var bU = aB.extend({}, bK); var bR = aW(bh(bK.start)); aU(); aB("body").css("cursor", bM + "-resize").one("mouseup", bT); bo("eventResizeStart", this, bK, bW); bQ.start(function (bY, bX) { if (bY) { var b1 = aT(bX); var b0 = aT(bY); b0 = Math.max(b0, bR); bS = bm(b0) - bm(b1); bV = bz(bK).add("days", bS); if (bS) { bU.end = bV; var bZ = bO; bO = bi(bU, bJ.row, bP); bO = aB(bO); bO.find("*").css("cursor", bM + "-resize"); if (bZ) { bZ.remove() } bc(bK) } else { if (bO) { a3(bK); bO.remove(); bO = null } } a4(); bp(bK.start, bV) } }, bW); function bT(bX) { bo("eventResizeStop", this, bK, bX); aB("body").css("cursor", ""); bQ.stop(); a4(); if (bS) { bf(this, bK, bV, bX) } setTimeout(function () { bN = false }, 0) } }) } } function b(aT, aV) { for (var aS = 0; aS < aV.length; aS++) { var aU = aV[aS]; if (aU.leftCol <= aT.rightCol && aU.rightCol >= aT.leftCol) { return true } } return false } function ai(aS, aW) { for (var aU = 0; aU < aS.length; aU++) { var aV = aS[aU]; var aT = aV.element; if (aT) { aW(aV, aT, aU) } } } function aD(aT, aS) { return (aS.rightCol - aS.leftCol) - (aT.rightCol - aT.leftCol) || aS.event.allDay - aT.event.allDay || aT.event.start - aS.event.start || (aT.event.title || "").localeCompare(aS.event.title) } function aq() { var a3 = this; a3.select = a1; a3.unselect = aW; a3.reportSelection = aS; a3.daySelectionMousedown = a0; var aZ = a3.calendar; var aU = a3.opt; var aV = a3.trigger; var aX = a3.defaultSelectionEnd; var aT = a3.renderSelection; var a2 = a3.clearSelection; var aY = false; if (aU("selectable") && aU("unselectAuto")) { aB(document).mousedown(function (a4) { var a5 = aU("unselectCancel"); if (a5) { if (aB(a4.target).parents(a5).length) { return } } aW(a4) }) } function a1(a5, a4) { aW(); a5 = aZ.moment(a5); if (a4) { a4 = aZ.moment(a4) } else { a4 = aX(a5) } aT(a5, a4); aS(a5, a4) } function aW(a4) { if (aY) { aY = false; a2(); aV("unselect", null, a4) } } function aS(a6, a4, a5) { aY = true; aV("select", null, a6, a4, a5) } function a0(a7) { var a6 = a3.cellToDate; var a5 = a3.getIsCellAllDay; var a4 = a3.getHoverListener(); var a8 = a3.reportDayClick; if (a7.which == 1 && aU("selectable")) { aW(a7); var a9; a4.start(function (bb, ba) { a2(); if (bb && a5(bb)) { a9 = [a6(ba), a6(bb)].sort(a); aT(a9[0], a9[1].clone().add("days", 1)) } else { a9 = null } }, a7); aB(document).one("mouseup", function (ba) { a4.stop(); if (a9) { if (+a9[0] == +a9[1]) { a8(a9[0], ba) } aS(a9[0], a9[1].clone().add("days", 1), ba) } }) } } } function c() { var aV = this; aV.renderOverlay = aT; aV.clearOverlays = aS; var aU = []; var aW = []; function aT(aY, aX) { var aZ = aW.shift(); if (!aZ) { aZ = aB("<div class='fc-cell-overlay' style='position:absolute;z-index:3'/>") } if (aZ[0].parentNode != aX[0]) { aZ.appendTo(aX) } aU.push(aZ.css(aY).show()); return aZ } function aS() { var aX; while ((aX = aU.shift())) { aW.push(aX.hide().unbind()) } } } function Q(aS) { var aT = this; var aU; var aV; aT.build = function () { aU = []; aV = []; aS(aU, aV) }; aT.cell = function (aW, a2) { var a1 = aU.length; var aX = aV.length; var aY, aZ = -1, a0 = -1; for (aY = 0; aY < a1; aY++) { if (a2 >= aU[aY][0] && a2 < aU[aY][1]) { aZ = aY; break } } for (aY = 0; aY < aX; aY++) { if (aW >= aV[aY][0] && aW < aV[aY][1]) { a0 = aY; break } } return (aZ >= 0 && a0 >= 0) ? { row: aZ, col: a0 } : null }; aT.rect = function (aZ, a1, aX, aY, a0) { var aW = a0.offset(); return { top: aU[aZ][0] - aW.top, left: aV[a1][0] - aW.left, width: aV[aY][1] - aV[a1][0], height: aU[aX][1] - aU[aZ][0] } } } function at(aX) { var aV = this; var aW; var aY; var aT; var aS; aV.start = function (aZ, a0, a1) { aY = aZ; aT = aS = null; aX.build(); aU(a0); aW = a1 || "mousemove"; aB(document).bind(aW, aU) }; function aU(aZ) { D(aZ); var a0 = aX.cell(aZ.pageX, aZ.pageY); if (Boolean(a0) !== Boolean(aS) || a0 && (a0.row != aS.row || a0.col != aS.col)) { if (a0) { if (!aT) { aT = a0 } aY(a0, aT, a0.row - aT.row, a0.col - aT.col) } else { aY(a0, aT) } aS = a0 } } aV.stop = function () { aB(document).unbind(aW, aU); return aS } } function D(aS) { if (aS.pageX === undefined) { aS.pageX = aS.originalEvent.pageX; aS.pageY = aS.originalEvent.pageY } } function l(aT) { var aS = this, aU = {}, aX = {}, aW = {}; function aV(aY) { return (aU[aY] = (aU[aY] || aT(aY))) } aS.left = function (aY) { return (aX[aY] = (aX[aY] === undefined ? aV(aY).position().left : aX[aY])) }; aS.right = function (aY) { return (aW[aY] = (aW[aY] === undefined ? aS.left(aY) + aV(aY).width() : aW[aY])) }; aS.clear = function () { aU = {}; aX = {}; aW = {} } } });